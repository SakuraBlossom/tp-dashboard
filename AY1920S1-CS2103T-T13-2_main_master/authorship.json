[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003d Mortago"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103T-T13-2/main[image:https://travis-ci.org/AY1920S1-CS2103T-T13-2/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "https://ci.appveyor.com/project/damithc/addressbook-level3[image:https://ci.appveyor.com/api/projects/status/3boko2x2vr5cc3w2?svg\u003dtrue[Build status]]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "https://coveralls.io/github/AY1920S1-CS2103T-T13-2/main?branch\u003dmaster[image:https://coveralls.io/repos/github/AY1920S1-CS2103T-T13-2/main/badge.svg?branch\u003dmaster[Coverage Status]]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "https://gitter.im/se-edu/Lobby[image:https://badges.gitter.im/se-edu/Lobby.svg[Gitter chat]]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "https://app.netlify.com/sites/mortago/deploys[image:https://api.netlify.com/api/v1/badges/934bd64f-9128-4ac0-8e64-fa469fcbd439/deploy-status[Netlify status]]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "* Mortago is a Mortuary Management System desktop application designed exclusively for Mortuary"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "managers."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "* Mortago provides an easy-to-use and intuitive Command Line Interface, as well as a compact and"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "informational dashboard that allows you to add, update, and manage bodies, fridges and"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "workers. You can easily track your workflow via the dashboard at a glance and be notified of"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "critical alerts!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "* Mortago is adapted from the AddressBook-Level3 project created by"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "https://se-education.org[SE-EDU initiative]."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 10,
      "arjavibahety": 2,
      "-": 28
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u0027site-name\u0027: \u0027Mortago\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://github.com/AY1920S1-CS2103T-T13-2/main\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 2,
      "-": 152
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "AddressBook - Level 3 was developed by the https://AY1920S1-CS2103T-T13-2.github.io/docs/Team.html[AY1920S1-CS2103T-T13-2] team. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Voong Yu Xuan"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "image::ambervoong.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "{empty}[https://github.com/ambervoong[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Role: Team Lead +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Responsibilities: Undo/Redo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Bahety Arjavi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "image::arjavibahety.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "{empty}[http://github.com/arjavibahety[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Responsibilities: Alerts"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Bernice Chio Hui Yin"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "image::bernicechio.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "{empty}[http://github.com/bernicechio[github]]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Responsibilities: Generate PDF"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Chan Dalis"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "image::dalisc.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "{empty}[http://github.com/dalisc[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Responsibilities: Sort"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Hong Shao Yi"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "image::shaoyi1997.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "{empty}[http://github.com/shaoyi1997[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Responsibilities: Dashboard GUI"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 23,
      "-": 33
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S1-CS2103T-T13-2/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Email us* : You can also reach us at `e0324970@u.nus.edu`"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 2,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d Mortago v2.0 - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level3/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "By: `Team AY1920S1-CS2103T-T13-2`      Since: `Sep 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "The `.puml` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the \u003c\u003cUsingPlantUml#, Using PlantUML guide\u003e\u003e to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has two classes called link:{repoURL}/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Undo/Redo feature"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Proposed Implementation"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoSequenceDiagram.png[]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState5.png[]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* has a need to manage a significant number of bodies"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "*Value proposition*: Mortago replaces and improves upon the traditional whiteboard system. It provides a convenient dashboard for the mortuary manager to keep track of all bodies and fridges, outstanding tasks, and alerts. Mortago unites the different aspects of a mortuary and allows the mortuary management to be more accurate in managing tasks, calculate the availability of space, and generates reports automatically."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |keep track of all bodies and fridges in a single dashboard using the dashboard command |look out for any outstanding work and keep myself up to speed"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |have a dynamically updated dashboard |reduce errors as compared to updating manually"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |sort the bodies by certain characteristics using the `sort` command |view bodies of a speciic category and generate statistics easily"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |filter the bodies by certain characteristics using `filter` command |view bodies of a certain category and generate statistics easily"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |update the status of each and every worker, body and fridge with the `update \u003cbody/worker/fridge ID\u003e \u003cattribute\u003e:\u003cstatus\u003e` command |know when (date \u0026 time) was each step of the process completed and the findings of each process (eg. cause of death)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |delete a worker, body and fridge with the `delete \u003cbody/worker/fridge ID\u003e` command |remove a worker when he quits, remove a wrong entry of the body, or remove a fridge"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |key new bodies into the system with the `add` command |keep track of them"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |switch between the dashboard and the detail views with the `tab __` command |view information in an appropriate format"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |view all free and vacant fridges with the `fridges` command |keep track of the overall vacancy of the morgue"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |view all registered bodies with the `bodies` command |view all bodies in the morgue"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |view all registered body parts with the `bodyparts` command |view all body parts in the morgue"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |view all the commands the app has with the `help` command |look at all the commands in one go"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |view emergency with the `hotlines` command |be efficient and respond quickly to emergencies"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* * *` |mortuary manager |read up on the use of a specific command of the app with the `help \u003cCommandName\u003e` command |understand a specific command which the app offers in more detail"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |be alerted to bodies unclaimed after 24hours using the `alerts` command |know when to start the administrative process for donation to medical research"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |receive routine reports from the app automatically using the `genReport \u003cbody ID\u003e` command |need not manually write in each and every single report"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |view past reports with the command `reports` and individual reports with `report \u003cbody ID\u003e` |easily obtain past reports for my own reference / authorities / other party"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |assign workers to tasks using the `tagw` command |know who was responsible for a task"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |can undo my previous tasks with the `undo` command |conveniently undo any wrong commands"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |redo my previous tasks with the `redo` command |conveniently redo any undone commands"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |add new or existing workers into the system with the flag -w (eg. `add -w`) command |keep track of all the workers in the mortuary"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |add new or existing fridge into the system with the flag -f (eg. `add -f`) command |keep track of all the fridges in the mortuary"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |be able to see a history of changes |know if anything was inputted wrongly in the past"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |create mortuary bills with the app automatically using the `genBill` command |need not manually write in each and every single bill"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |view past reports with the command `bills` and individual reports with `bill [body ID]` |easily obtain past bills for my own reference / authorities / third party"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |archive processed cases on a regular interval with command `archive` |review past cases when such a need arises"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`* *` |mortuary manager |add comments and feedback to workplace processes with the `feedback` command |review these feedback and improve on them"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`*` |mortuary manager |feel happy when I see a beautifully designed dashboard |keep my mood up throughout the day"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|`*` |mortuary manager |make sure that everything is organised and in order |be praised by my higher ups"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "(For all use cases below, the *System* is the `AddressBook` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003d\u003d\u003d Use case: View dashboard"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "1. Mortuary manager requests to view the dashboard"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "2. Mortago displays the dashboard."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "+"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003d\u003d\u003d Use case: Add body"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "1. Mortuary manager requests to add a body"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "2. Mortago adds the body into the system"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "+"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "* 1a. Duplicate body found."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "+"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "** 1a1. Mortago shows an error message."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "+"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "Use case restarts at step 1."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "* 1b. Mandatory fields are missing."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "+"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "** 1b1. Mortago shows an error message."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "+"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Use case: Delete body"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "dalisc"
        },
        "content": "1.  Mortuary manager requests to list bodies."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "dalisc"
        },
        "content": "2.  Mortago shows a list of bodies."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "dalisc"
        },
        "content": "3.  Mortuary manager requests to delete a specific body in the list."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "dalisc"
        },
        "content": "4.  Mortago deletes the body from the system."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "** 3a1. Mortago shows an error message."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d Use case: Find entry"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "dalisc"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "dalisc"
        },
        "content": "1.  Mortuary manager switches to the desired view (bodies or workers)."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "dalisc"
        },
        "content": "2.  Mortuary manager specifies word to search."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "dalisc"
        },
        "content": "3.  Mortago shows a list of entries whose names matches the word."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "dalisc"
        },
        "content": "+"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "dalisc"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "dalisc"
        },
        "content": "* 3a. The list is empty."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "dalisc"
        },
        "content": "+"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d Use case: Filter entries"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "dalisc"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "dalisc"
        },
        "content": "1.  Mortuary manage switches to the desired view (bodies or workers)."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "dalisc"
        },
        "content": "2.  Mortuary manager specifies criteria for filter."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "dalisc"
        },
        "content": "3.  Mortago shows a list of entries that matches the criteria."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "dalisc"
        },
        "content": "+"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "dalisc"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "dalisc"
        },
        "content": "* 3a. The list is empty."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "dalisc"
        },
        "content": "+"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d Use case: Sort entries"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "dalisc"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "dalisc"
        },
        "content": "1.  Mortuary manage switches to the desired view (bodies or workers)."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "dalisc"
        },
        "content": "2.  Mortuary manager specifies criteria for sorting."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "dalisc"
        },
        "content": "3.  Mortago shows a list of entries sorted according to the specified criteria."
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "dalisc"
        },
        "content": "+"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "dalisc"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "dalisc"
        },
        "content": "* 3a. The list is empty."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "dalisc"
        },
        "content": "+"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Use case: Generate report"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "dalisc"
        },
        "content": "1.  Mortuary manager requests to generate report for a specific body."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "dalisc"
        },
        "content": "2.  Mortago creates a new PDF report with body ID as the title."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "+"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* 1a. The given body ID is invalid."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "+"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "** 1a1. Mortago shows an error message."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "+"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d Use case: Alert for unclaimed bodies."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "dalisc"
        },
        "content": "1.  Mortuary manager wants to be reminded of the next line of action if next of kin cannot be contacted within 24 hours."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "dalisc"
        },
        "content": "2.  Mortago maintains a record of all the alerts about unidentified and unclaimed bodies until their status is changed."
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "dalisc"
        },
        "content": "3.  Mortago shows pop-up alerts after 24 hours from the point of arrival of the body in the mortuary."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "+"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "* 1a. There are no alerts"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "+"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "\u003d\u003d\u003d Use case: Undoing a previous command"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "1. Mortuary manager requests to undo the previous command."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "2. Mortago undoes the command."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "3. Mortago updates the GUI to reflect the new changes."
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "+"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "* 2a. There is no command to undo."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "+"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "* 2b. An error occurred when undoing the command."
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "    ** 2b1. Mortago shows an error message and nothing is changed."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "+"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "\u003d\u003d\u003d Use case: Redoing an undone command"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "1. Mortuary manager requests to redo the last undone command."
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "2. Mortago redoes the command."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "3. Mortago updates the GUI to reflect the new changes."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "+"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "* 2a. There is no command to redo."
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "+"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "* 2b. An error occurred when undoing the command."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "    ** 2b1. Mortago shows an error message and nothing is changed."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "+"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "ambervoong"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "ambervoong"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[[body]] Body::"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "dalisc"
        },
        "content": "A corpse"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[[command-line-interface]] Command-Line-Interface (CLI)::"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "dalisc"
        },
        "content": "A text-based user interface (UI) used to view and manage computer files"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[[graphical-user-interface]] Graphical User Interface (GUI)::"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "dalisc"
        },
        "content": "An interface through which a user interacts with electronic devices such as computers, hand-held devices and other appliances. This interface uses icons, menus and other visual indicator (graphics) representations to display information and related user controls, unlike text-based interfaces, where data and commands are in text"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 37,
      "dalisc": 69,
      "arjavibahety": 14,
      "ambervoong": 47,
      "bernicechio": 75,
      "-": 409
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d Mortago v2.0 - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ":toclevels: 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103T-T13-2/main"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "By: `Team  AY1920S1-CS2103T-T13-2`      Since: `Sep 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Mortago is a mortuary management system for hospitals. Mortago is optimized for efficient mortuary managers who *prefer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "to work with a Command Line Interface (CLI)* while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Mortago provides a *convenient dashboard* for the mortuary manager to keep track of all bodies and fridges, outstanding"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "tasks, and alerts. It replaces and improves upon the traditional whiteboard system. Mortago allows the mortuary management to be more accurate in managing tasks, calculating the availability of space, viewing archives and generating reports automatically."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Interested? Jump to \u003c\u003cQuick-Start\u003e\u003e to get started. Enjoy!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[[Quick-Start]]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ".  Ensure you have `Java 11` or above installed in your Computer."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ".  Download the latest `mortago.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for Mortago."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* *`list`* : lists all contacts"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *`workers`* : switches to the workers tab"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* **`add -w`**`/firstName John /lastName Doe /dob 17-05-1980` :"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "adds a worker named John Doe (with his date of birth) to the management system."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* **`delete -w`**`100200` : deletes the worker with staff ID W100200"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Command Specification*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* The word after an `/attributeName` should be provided by you."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** e.g. In the sort command `sort /order status`, you must replace `status` with your own input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* Words in parentheses are optional."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** e.g. `update -b (/religion religion /status status)` can be used as either of these:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        *** update -b /religion Buddhist"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        *** update -b /religion Buddhist /status released"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* Parameters in parentheses can be given in any order."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** e.g. These both result in the same command"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        *** `update -b /religion Buddhist /status released`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        *** `update -b /status released /religion Buddhist`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* Commands that require `/attributeName` must be supplied with the respective name of the attribute which belong to the worker, fridge, or body."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "The types of attributes for each entry can be found in \u003c\u003cadd, 3.1.1\u003e\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| :bulb: What are attributes?"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Attributes are properties of a body, fridge or worker that are supplied by you when creating a body, fridge, or worker entry."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    e.g. `firstName` is an attribute for both body and worker entries."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* Commands with fields tagged with `...` must be supplied at least one argument. When `...` appears after"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a parenthesis, it means that you can supply one or more arguments."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** `filter (/attributeName attributeValue)...`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** `filter /firstName John` and `filter /sex F` are valid commands."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* Some commands require a -flag while some are optional. List of flags:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** -b: to indicate a `body` entry"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** -w: to indicate a `worker` entry"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** -f: to indicate a `fridge` entry"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** -v: view the verbose description of all commands and their flags."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* The identification number of these objects are automatically generated by Mortago for your convenience."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "If you need to supply the identification number to a command, giving the number (e.g. `20`) is enough."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "The identification number is in the format as shown:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** `body` entries: `B\\\\####\\####`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** `worker` entries: `W\\\\#####`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    **  `fridge` entries: `F##`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Create, Read, Update and Delete Entries"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[[add]]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Add an entry: `add`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Add a body, worker or fridge +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "| Purpose | Command Format"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Add a new worker"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a|"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "add -w"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/firstName firstName"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "(/middleName middleName)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/lastName lastName"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "(/phoneNo phoneNumber)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/sex  sex"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dob dateOfBirth"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dateJoined dateJoined"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/designation designation"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/status employmentStatus"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "---"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Add a new body"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a|"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "add -b"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/firstName firstName"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "(/middleName middleName )"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/lastName lastName"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/sex  sex"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dob DateOfBirth"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dod DateOfDeath (HH:MM)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/doa DateOfAdmission (HH:MM)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/status status"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/nric nricNumber"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/religion religion"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/nameNOK nameOfNextOfKin"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/relationship Relationship"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/phoneNOK phoneNOK"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/cod causeOfDeath"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/details details"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/organsForDonation organsForDonation"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "/fridgeId fridgeId"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "---"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Add a new fridge"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a|"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "add -f"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Default status: Unoccupied"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Command | Expected Output"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a|"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "add -w"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/firstName John"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/lastName Doe"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/phoneNo 87654321"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/sex M"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dateJoined 18/08/2019"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/designation Autopsy Technician"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "---"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Worker added"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a|"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "add -b"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/firstName Mary"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/lastName Smith"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/sex F"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dob 12/12/1984"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/dod 12/08/2019 2358"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/doa 13/08/2019 0200"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/status contactedNOK"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/nric S8456372C"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/religion Catholic"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/nameNOK Jack Smith"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/relationship Husband"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/phoneNOK 83462756"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/cod Car Accident"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/details Heavy bleeding and head injury"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/organsForDonation NIL"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/fridgeId 2"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "---"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Body added"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "a|"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[source,java]"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "add -f"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Fridge added"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[[update]]"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Update an entry: `update`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Update the status of each worker, body or fridge"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `update -flag /id id (/attributeName attributeValue)`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Command | Expected Output"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`update -w /id 1 /designation Senior Autopsy Technician`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Status of worker 1 changed"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| `update -b /id 1 /organsForDonation heart`"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Organs listed for donation for body 1 changed"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| `update -f /id 1 /status occupied`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Status of fridge 1 changed"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d\u003d Locating entries by name: `find`"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "Finds persons whose names contain any of the given keywords. +"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Below are some important information regarding this command:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "* The search is case insensitive. e.g `hans` will match `Hans`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "* Only the name is searched."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* Only full words will be matched e.g. `Han` will not match `Hans`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Format: `find (keyword)...`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "* `find John` +"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "Returns `john` and `John Doe`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "* `find Betsy Tim John` +"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "Returns any person having names `Betsy`, `Tim`, or `John`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::delete[]"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Deleting a person : `delete`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Delete a body, worker or fridge entry, indicated by its id number. +"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `delete -flag  id`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* Deletes the body, worker or fridge entry with the specified identification number."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* The identification number is automatically generated when an entity is created and is in the format `BXXXXXXXX`, `WXXXXX`, or `FXX` for a"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "body, worker or fridge entry respectively."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "X represents any digit."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* You only need to specify the number portion of the ID, without leading zeroes."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `delete -w 1` +"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "The worker with the identification number `W00001` will be deleted."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "// end::delete"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Clearing all entries : `clear`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "Clears all entries from the address book. +"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d  View an entry: `view`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "View a single entry of a body, worker, fridge."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `view -flag /id id`"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Flags | Usage"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| -b | View the body with the given ID."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| -w | View the worker with the given ID."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| -f | View the fridge with the given ID."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example: `view -b /id 91` +"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "View a body with the ID B00000091."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d\u003d List all entries: `list`"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "List all entries of bodies, workers, or fridges."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `list -flag`"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| Flags | Usage"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| -b | View all bodies."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| -w | View all workers."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "| -f | View all fridges."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example: `list -b` +"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Lists all bodies currently in Mortago."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d General"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003d\u003d\u003d\u003d Display dashboard: `dashboard`"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "Brings up the dashboard to the front of the application. +"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "The dashboard provides a compact view of all bodies, workers and fridges, as well as several important statistics that may be useful to you."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "Format: `dashboard`"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d View alerts panel: `alerts`"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "View all alerts. Alerts are automatically generated by Mortago."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "Alerts are made when one of the following happens:"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "* Next of kin could not be contacted within 24 hours from the time of arrival of the body."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "* The body is not claimed on the specified date of collection as specified by next of kin."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "arjavibahety"
        },
        "content": "Once the mortuary manager takes the relevant action, the alert will be automatically removed."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `alerts`"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Sort all entries: `sort`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Sort all displayed entries according to a given order. Only body and worker entries can be sorted."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Sort only works on the entries that are in view. For example, to sort body entries, the you need to first navigate to the bodies view."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Types of ordering can be found below:"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `name`: entries are sorted by alphabetical order of their names"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dalisc"
        },
        "content": "* `id`: entries are sorted by their id number, in descending order (newest entry appear first)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    ** `id asc`: entries are sorted in ascending order of id number"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    ** `id desc`: entries are sorted in descending order of id number"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "dalisc"
        },
        "content": "         *** If neither \u0027asc\u0027 or \u0027desc\u0027 qualifiers are supplied, the ordering is by default descending."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "dalisc"
        },
        "content": "* `status`: entries are sorted by their statuses in this order:"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "dalisc"
        },
        "content": "Format: `sort /order order`"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `sort /order status` +"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "All entries will be sorted and grouped according to their statuses."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dalisc"
        },
        "content": "* `sort /order id asc` +"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "All entries will be sorted according to their id number in ascending order."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "dalisc"
        },
        "content": "\u003d\u003d\u003d\u003d Filter body entries entries: `filter`"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Filter all entries according to the given keyword in any of an entry’s attribute. All entries with matching keyword will be displayed. Keyword is case-insensitive."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dalisc"
        },
        "content": "All attributes of a body entry can be filtered. Please refer to \u003c\u003cSection 3.1.1\u003e\u003e for the different fields available to be filtered."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `filter (/attributeName attributeValue)...`"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "dalisc"
        },
        "content": "`filter /cod Car Accident`"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "dalisc"
        },
        "content": "All body entries with car accident as the cause of death will be displayed."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Undo previous command: `undo`"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Undo the last executed command."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Only commands that change Mortago\u0027s data will be undone."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* The last executed command was `list`. The second last executed command was `add`."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** When `undo` is executed, it undos `add` because `list` does not change any data."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Redo previous command: `redo`"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Redo the last undone command."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `redo`"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Administrative"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Archive entries: `archive` `[coming in v2.0]`"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Archive old or irrelevant entries. One entry can be archived at a time, or all entries of a certain specification can be archived at once."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `archive -flag /id id`"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `archive -flag /status status`"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `archive -b /id 2` +"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Archives body entry with ID 2"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `archive -w /status inactive` +"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Archives all entries of workers who are inactive"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d View archived entries: `archives` `[coming in v2.0]`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Display all archived entries."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `archives -flag`"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `archives -b` +"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Display of all archived body entries, in order of archive date"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `archives -w` +"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Display of all archived worker entries, in order of archive date"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Give and view feedback: `feedback`"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Give workers feedback (for the manager’s own reference), and can display a history of all feedback entered."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`feedback /id staffID /details details`"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`feedback`"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `feedback /id 10 /details very meticulous` +"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Note down feedback for worker with ID W10010 with custom details"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `feedback` +"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Display of all feedback entered"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Assign tasks to worker: `assign`"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Assign a body and task to a worker."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `assign /bodyId bodyId /staffId workerId /task taskDescription`"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `assign /bodyId 2 /staffId 1 /task send blood sample to lab for analysis` +"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Assigns worker with staff ID W00001 to body with ID B00000002 with a task description."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Document Generation"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d Generate report on the deceased: `genReport`"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Generate an individual report from the app automatically"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `genReport bodyID`"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `genReport 123` +"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Outputs the report PDF for body ID B00000123"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d View past individual reports: `report`"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Receive details of a past individual report."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `report bodyID`"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* `report 1` +"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Outputs the past report of body ID B00000001"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d View past reports: `reports`"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Receive a list of past reports."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `reports`"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example: `reports` +"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Outputs the list of past reports"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d Help"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d View all commands: `help`"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "View a summary of all available commands and their flags. Use the `-v` flag to view the detailed description of all commands and their flags."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `help -flag`"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example: `help -v` +"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Shows a link to the User Guide."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "3.5.b. Get information about a command: `help command`"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "View the detailed description of the specified command and its flags, if any."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `help command`"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example: `help undo` +"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Shows undo command description."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d\u003d\u003d View help hotlines: `hotlines` `[coming in v2.0]`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "View emergency help hotlines."
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `hotlines`"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example: `hotlines` +"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Lists emergency help hotlines."
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d FAQ"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "*Q*: How do I transfer my data to another Computer? +"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains your Mortago data."
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Q*: How do I save my data? +"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*A*: Mortago\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d Command Summary"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Add* an entry: `add`"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Add a new worker, body, or fridge with the"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`add -flag (/attributeName attributeValue)`"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Update* an entry: `update`"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Update the status of each worker, body, or fridge with the `update -flag (/attributeName attributeValue)`"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Find* : `find (keyword)...` +"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Find entries using a keyword. +"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `find keyword`"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Delete* an entry: `delete`"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Delete a body, worker or fridge entry, indicated by its id number. +"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `delete -flag id`"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "* *Clear* : `clear`"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *View* : `view -flag /id id`"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *List* : `list -flag`"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "* *View dashboard* : `dashboard`"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    ** Brings the dashboard to the front of the app."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *View alerts* : `alerts`"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** View all alerts brought up by the app."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Sort* : `sort`"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Sort all displayed entries according to a given order. +"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `sort /order order (/idOrder idOrder)`"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Filter* : `filter`"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Filter all entries according to the given keyword in any of an entry’s field. +"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `filter (/field keyword)...`"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Undo* : `undo`"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Undo the last executed command. +"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `undo`"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Redo* : `redo`"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Redo the last undone command. +"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `redo`"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Exit*: `exit`"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Archive entries* : `archive` `[coming in v2.0]`"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Archive old or irrelevant entries."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `archive -flag /id id`, `archive -flag /status status`"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *View archived entries* : `archives` `[coming in v2.0]`"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Display all archived entries."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `archives -flag`"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Give and view feedback* : `feedback`"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    * Give workers feedback and displays a history of all feedback entered."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `feedback /id staffID /notes notes`, feedback`"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Assign tasks* : `assign`"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Assign a body and task to a worker."
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `assign /bodyId bodyId /staffId workerId /task taskDescription`"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Generate report* : `genReport`"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Generate an individual report from the app automatically"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `genReport bodyID`"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *View a select report* : `report`"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Receive details of a past individual report."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `report bodyID`"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *View past reports* : `reports`"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Receive a list of past reports."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `reports`"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Help summary*: `help`"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ** Get information about the commands"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Format: `help -flag`"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Help for specific command* : `help command`"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *Help hotlines* : `hotlines` `[coming in v2.0]`"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Attribute* : In Mortago, an attribute is the property of a body, fridge or worker. +"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Body/bodies* : a corpse +"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Command Line Interface (CLI)* : a text-based user interface (UI) used to view and manage computer files +"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Graphical User Interface (GUI)* : an interface through which a user interacts with electronic devices such as computers, hand-held devices and other appliances. This interface uses icons, menus and other visual indicator (graphics) representations to display information and related user controls, unlike text-based interfaces, where data and commands are in text"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "*Operating system (OS)* :the low-level software that supports a computer\u0027s basic functions, such as scheduling tasks and controlling peripherals"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 11,
      "dalisc": 17,
      "arjavibahety": 7,
      "bernicechio": 452,
      "-": 105
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods used for parsing strings in the various *Parser classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * trimmed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Index parseIndex(String oneBasedIndex) throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedIndex \u003d oneBasedIndex.trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_INDEX);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Index.fromOneBased(Integer.parseInt(trimmedIndex));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String name} into a {@code Name}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code name} is invalid."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Name parseName(String name) throws ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(name);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedName \u003d name.trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Name.isValidName(trimmedName)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Name(trimmedName);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String phone} into a {@code Phone}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code phone} is invalid."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Phone parsePhone(String phone) throws ParseException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(phone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedPhone \u003d phone.trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Phone.isValidPhone(trimmedPhone)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Phone(trimmedPhone);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String address} into an {@code Address}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code address} is invalid."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Address parseAddress(String address) throws ParseException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(address);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedAddress \u003d address.trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Address.isValidAddress(trimmedAddress)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Address(trimmedAddress);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String email} into an {@code Email}."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code email} is invalid."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Email parseEmail(String email) throws ParseException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(email);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedEmail \u003d email.trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Email.isValidEmail(trimmedEmail)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Email(trimmedEmail);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses a {@code String tag} into a {@code Tag}."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Leading and trailing whitespaces will be trimmed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the given {@code tag} is invalid."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Tag parseTag(String tag) throws ParseException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tag);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        String trimmedTag \u003d tag.trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Tag.isValidTagName(trimmedTag)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Tag(trimmedTag);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tags);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String tagName : tags) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            tagSet.add(parseTag(tagName));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagSet;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Parses {@code String date} into a {@code Date date}."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws java.text.ParseException if the given {@code String date} is invalid."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static Date parseDate(String date) throws java.text.ParseException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        requireNonNull(date);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return format.parse(date);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 12,
      "-": 124
    }
  },
  {
    "path": "src/main/java/seedu/address/model/entity/IdentificationNumber.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.model.entity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "//@@author shaoyi1997"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Represents the ID number of each entity."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Guarantees: immutable, unique ID number will be generated from within the class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class IdentificationNumber {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static final String ID_PREFIX_BODY \u003d \"B\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static final String ID_PREFIX_WORKER \u003d \"W\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static final String ID_PREFIX_FRIDGE \u003d \"F\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static int countOfBodies \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static int countOfWorkers \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static int countOfFridges \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private int idNum;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String typeOfEntity;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    // todo: check for duplicates"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected IdentificationNumber(String typeOfEntity) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.typeOfEntity \u003d typeOfEntity;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        switch (typeOfEntity) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        case ID_PREFIX_BODY:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            countOfBodies++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            idNum \u003d countOfBodies;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        case ID_PREFIX_WORKER:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            countOfWorkers++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            idNum \u003d countOfWorkers;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        case ID_PREFIX_FRIDGE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            countOfFridges++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            idNum \u003d countOfFridges;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            throw new IllegalArgumentException(\"Invalid entity type\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private IdentificationNumber(String typeOfEntity, int idNum) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.typeOfEntity \u003d typeOfEntity;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.idNum \u003d idNum;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static IdentificationNumber generateNewBodyId() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return new IdentificationNumber(ID_PREFIX_BODY);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static IdentificationNumber generateNewWorkerId() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return new IdentificationNumber(ID_PREFIX_WORKER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static IdentificationNumber generateNewFridgeId() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return new IdentificationNumber(ID_PREFIX_FRIDGE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static IdentificationNumber customGenerateId(String typeOfEntity, int idNum) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return new IdentificationNumber(typeOfEntity, idNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String paddedId;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        switch (typeOfEntity) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        case ID_PREFIX_BODY:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            paddedId \u003d String.format(\"%08d\", idNum);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        case ID_PREFIX_WORKER:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            paddedId \u003d String.format(\"%05d\", idNum);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        case ID_PREFIX_FRIDGE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            paddedId \u003d String.format(\"%02d\", idNum);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            paddedId \u003d \"Invalid ID\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return typeOfEntity + paddedId;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void decrementCountOfBodies() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        countOfBodies--;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void decrementCountOfWorkers() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        countOfWorkers--;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void decrementCountOfFridges() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        countOfFridges--;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void resetCountOfBodies() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        countOfBodies \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void resetCountOfWorkers() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        countOfWorkers \u003d 0;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void resetCountOfFridges() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        countOfFridges \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber that \u003d (IdentificationNumber) o;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return typeOfEntity.equals(that.typeOfEntity) \u0026\u0026 idNum \u003d\u003d that.idNum;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return Objects.hash(typeOfEntity + idNum);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 125
    }
  },
  {
    "path": "src/main/java/seedu/address/model/entity/worker/Designation.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.model.entity.worker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author shaoyi"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Enumerates all possible designations of a worker."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public enum Designation {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    MANAGER, TECHNICIAN"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 9,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/entity/worker/Worker.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.model.entity.worker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.entity.IdentificationNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author shaoyi"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Represents a worker entry in Mortago."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Worker {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private final IdentificationNumber workerIdNum;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String sex; // NOTE: type String will be replaced with Sex class after Amber\u0027s PR is merged"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Date dateOfBirth;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Date dateJoined;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Designation designation;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String employmentStatus;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Worker(Name name, Phone phone, String sex, String employmentStatus, Date dateOfBirth, Date dateJoined,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                  Designation designation) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.workerIdNum \u003d IdentificationNumber.generateNewWorkerId();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.sex \u003d sex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.employmentStatus \u003d employmentStatus;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.dateJoined \u003d dateJoined;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.designation \u003d designation;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Worker(Name name, Phone phone, String sex, String employmentStatus, Date dateOfBirth, Date dateJoined,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                  Designation designation, boolean isTestWorker) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isTestWorker) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            this.workerIdNum \u003d IdentificationNumber.customGenerateId(\"W\", 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            this.workerIdNum \u003d IdentificationNumber.generateNewWorkerId();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.sex \u003d sex;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.employmentStatus \u003d employmentStatus;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.dateJoined \u003d dateJoined;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.designation \u003d designation;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public IdentificationNumber getWorkerIdNum() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return workerIdNum;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Phone getPhone() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return phone;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getSex() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return sex;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Date getDateOfBirth() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return dateOfBirth;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Date getDateJoined() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return dateJoined;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Designation getDesignation() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return designation;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getEmploymentStatus() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return employmentStatus;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setPhone(Phone phone) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setSex(String sex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.sex \u003d sex;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDateOfBirth(Date dateOfBirth) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.dateOfBirth \u003d dateOfBirth;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDateJoined(Date dateJoined) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.dateJoined \u003d dateJoined;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDesignation(Designation designation) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.designation \u003d designation;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setEmploymentStatus(String employmentStatus) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.employmentStatus \u003d employmentStatus;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns true if both workers have the same identity fields."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * This defines a weaker notion of equality between two workers."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isSamePerson(Worker otherWorker) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (otherWorker \u003d\u003d this) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return otherWorker !\u003d null"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u0026\u0026 otherWorker.getName().equals(getName())"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u0026\u0026 otherWorker.getSex().equals(getSex())"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u0026\u0026 (otherWorker.getPhone().equals(getPhone()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns true if both workers have the same identity and data fields."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * This defines a stronger notion of equality between two workers."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (!(other instanceof Worker)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Worker otherPerson \u003d (Worker) other;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u0026\u0026 otherPerson.getPhone().equals(getPhone())"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u0026\u0026 otherPerson.getSex().equals(getSex());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return Objects.hash(name, phone, sex);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(\" Sex: \")"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(getSex())"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(\" Phone: \")"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(getPhone())"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(\" Date of Birth: \")"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(getDateOfBirth())"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(\" Date Joined: \")"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(getDateJoined())"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(\" Designation: \")"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(getDesignation())"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(\" Employment Status: \")"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .append(getEmploymentStatus());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 173,
      "-": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/model/entity/IdentificationNumberTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.model.entity;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class IdentificationNumberTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void constructorIdNum_null_throwsNullPointerException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertThrows(NullPointerException.class, () -\u003e new IdentificationNumber(null));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void constructorIdNum_emptyString_throwsIllegalArgumentException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e new IdentificationNumber(\"\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void generateNewBodyId_true() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber.resetCountOfBodies();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber testId \u003d IdentificationNumber.generateNewBodyId();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"B00000001\", testId.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void generateNewWorkerId_true() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber.resetCountOfWorkers();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber testId \u003d IdentificationNumber.generateNewWorkerId();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"W00001\", testId.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void generateNewFridgeId_true() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber.resetCountOfFridges();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber testId \u003d IdentificationNumber.generateNewFridgeId();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"F01\", testId.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testEquals_differentAndNull_notEqual() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber.resetCountOfBodies();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber.resetCountOfWorkers();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber.resetCountOfFridges();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        IdentificationNumber testId \u003d IdentificationNumber.generateNewBodyId();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertNotEquals(testId, IdentificationNumber.generateNewBodyId());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertNotEquals(testId, IdentificationNumber.generateNewFridgeId());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertNotEquals(testId, IdentificationNumber.generateNewWorkerId());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertNotEquals(testId, null);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 54
    }
  },
  {
    "path": "src/test/java/seedu/address/model/entity/worker/DesignationTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.model.entity.worker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author shaoyi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class DesignationTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void enumerateDesignation_indexOne_correct() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(Designation.MANAGER.toString(), \"MANAGER\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void enumerateDesignation_indexOne_wrong() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertNotEquals(Designation.TECHNICIAN.toString(), \"MANAGER\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 20,
      "-": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/model/entity/worker/WorkerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.model.entity.worker;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.TypicalWorkers.ALICE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.TypicalWorkers.BENSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_DATE_JOINED;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_DATE_OF_BIRTH;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_DESIGNATION;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_EMPLOYMENT_STATUS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_NAME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_PHONE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static seedu.address.testutil.WorkerBuilder.DEFAULT_SEX;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.entity.IdentificationNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.testutil.WorkerBuilder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class WorkerTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @SuppressWarnings(\"checkstyle:Regexp\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void isSamePerson() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertTrue(ALICE.isSamePerson(ALICE));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.isSamePerson(null));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different person entirely -\u003e returns false"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.isSamePerson(BENSON));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different phone and email -\u003e returns false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Worker editedAlice \u003d new WorkerBuilder(ALICE).withPhone(WorkerBuilder.DEFAULT_PHONE).build();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.isSamePerson(editedAlice));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        editedAlice \u003d new WorkerBuilder(ALICE).withName(DEFAULT_NAME).build();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.isSamePerson(editedAlice));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // same name, same phone, different attributes -\u003e returns true"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        editedAlice \u003d new WorkerBuilder(ALICE).withDateJoined(WorkerBuilder.DEFAULT_DATE_JOINED)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .withDateOfBirth(WorkerBuilder.DEFAULT_DATE_OF_BIRTH)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            .withEmploymentStatus(WorkerBuilder.DEFAULT_EMPLOYMENT_STATUS).build();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertTrue(ALICE.isSamePerson(editedAlice));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Worker aliceCopy \u003d new WorkerBuilder(ALICE).build();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertTrue(ALICE.equals(aliceCopy));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertTrue(ALICE.equals(ALICE));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // same hashcode -\u003e returns true"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.equals(null));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different type -\u003e returns false"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.equals(5));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different person -\u003e returns false"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.equals(BENSON));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different name -\u003e returns false"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Worker editedAlice \u003d new WorkerBuilder(ALICE).withName(DEFAULT_NAME).build();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.equals(editedAlice));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different phone -\u003e returns false"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        editedAlice \u003d new WorkerBuilder(ALICE).withPhone(WorkerBuilder.DEFAULT_PHONE).build();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.equals(editedAlice));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // different sex -\u003e returns false"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        editedAlice \u003d new WorkerBuilder(ALICE).withSex(WorkerBuilder.DEFAULT_SEX).build();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertFalse(ALICE.equals(editedAlice));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void gettersAndSetters_correct() throws ParseException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(IdentificationNumber.customGenerateId(\"W\", 1), ALICE.getWorkerIdNum());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Worker testWorker \u003d new WorkerBuilder().build();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(new Name(DEFAULT_NAME), testWorker.getName());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Date newDate \u003d ParserUtil.parseDate(\"2/2/2000\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        testWorker.setDateJoined(newDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(newDate, testWorker.getDateJoined());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        testWorker.setDateOfBirth(newDate);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(newDate, testWorker.getDateOfBirth());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        testWorker.setDesignation(Designation.MANAGER);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(Designation.MANAGER, testWorker.getDesignation());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Phone newPhone \u003d new Phone(\"90000001\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        testWorker.setPhone(newPhone);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(newPhone, testWorker.getPhone());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        testWorker.setSex(\"Female\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"Female\", testWorker.getSex());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        testWorker.setEmploymentStatus(\"Test status\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"Test status\", testWorker.getEmploymentStatus());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void toString_correct() throws ParseException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(DEFAULT_NAME + \" Sex: \" + DEFAULT_SEX + \" Phone: \" + DEFAULT_PHONE"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                + \" Date of Birth: \" + ParserUtil.parseDate(DEFAULT_DATE_OF_BIRTH)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                + \" Date Joined: \" + ParserUtil.parseDate(DEFAULT_DATE_JOINED)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                + \" Designation: \" + DEFAULT_DESIGNATION + \" Employment Status: \" + DEFAULT_EMPLOYMENT_STATUS,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                new WorkerBuilder().build().toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 125
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalWorkers.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.entity.worker.Worker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * A utility class containing a list of {@code Workers} objects to be used in tests."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class TypicalWorkers {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final Worker ALICE \u003d new WorkerBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        .withPhone(\"94351253\").withDateJoined(\"12/12/2019\").withSex(\"Female\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        .withEmploymentStatus(\"cleaning\").build();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final Worker BENSON \u003d new WorkerBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        .withPhone(\"98765432\").withDateJoined(\"12/12/2019\").withSex(\"Male\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        .withEmploymentStatus(\"transporting\").build();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private TypicalWorkers() {} // prevents instantiation"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 18
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/WorkerBuilder.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.entity.worker.Designation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.entity.worker.Worker;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * A utility class to help with building Worker objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class WorkerBuilder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String MESSAGE_INVALID_TEST_DATE \u003d \"Test parameters for dates are invalid\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"John Doe\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String DEFAULT_PHONE \u003d \"91234567\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String DEFAULT_SEX \u003d \"Male\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String DEFAULT_DATE_OF_BIRTH \u003d \"01/01/1997\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String DEFAULT_DATE_JOINED \u003d \"01/01/2019\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final Designation DEFAULT_DESIGNATION \u003d Designation.TECHNICIAN;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static final String DEFAULT_EMPLOYMENT_STATUS \u003d \"cleaning\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String sex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Date dateOfBirth;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Date dateJoined;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Designation designation;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String employmentStatus;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        phone \u003d new Phone(DEFAULT_PHONE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        sex \u003d DEFAULT_SEX;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            dateOfBirth \u003d ParserUtil.parseDate(DEFAULT_DATE_OF_BIRTH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            dateJoined \u003d ParserUtil.parseDate(DEFAULT_DATE_JOINED);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            System.out.println(MESSAGE_INVALID_TEST_DATE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        designation \u003d DEFAULT_DESIGNATION;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        employmentStatus \u003d DEFAULT_EMPLOYMENT_STATUS;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the WorkerBuilder with the data of {@code workerToCopy}."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder(Worker workerToCopy) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        name \u003d workerToCopy.getName();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        phone \u003d workerToCopy.getPhone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        sex \u003d workerToCopy.getSex();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        dateOfBirth \u003d workerToCopy.getDateOfBirth();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        dateJoined \u003d workerToCopy.getDateJoined();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        designation \u003d workerToCopy.getDesignation();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        employmentStatus \u003d workerToCopy.getEmploymentStatus();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code Name} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withName(String name) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code sex} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withSex(String sex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.sex \u003d sex;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code employmentStatus} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withEmploymentStatus(String employmentStatus) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.employmentStatus \u003d employmentStatus;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code Phone} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.phone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code dateOfBirth} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withDateOfBirth(String dateOfBirth) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            this.dateOfBirth \u003d ParserUtil.parseDate(dateOfBirth);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            System.out.println(MESSAGE_INVALID_TEST_DATE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code dateJoined} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withDateJoined(String dateJoined) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            this.dateJoined \u003d ParserUtil.parseDate(dateJoined);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            System.out.println(MESSAGE_INVALID_TEST_DATE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Sets the {@code designation} of the {@code Worker} that we are building."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public WorkerBuilder withDesignation(Designation designation) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.designation \u003d designation;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Worker build() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return new Worker(name, phone, sex, employmentStatus, dateOfBirth, dateJoined, designation, true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 127
    }
  }
]
