[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "\u003d Memory Flash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103-T14-3/main[image:https://travis-ci.org/AY1920S1-CS2103-T14-3/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Need to cram for an upcoming test? Interested in learning a new language? Memory Flash is here for you."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "This flashcard program helps you memorise more efficiently, reducing study time and increasing the amount of content you can learn"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* This application will help anyone looking to remember things faster and for longer, it can help users to:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "** Revise for a test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "** Learn general trivia"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "** Pick up a new language"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "** And much more!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Memory flash has a GUI with an easy to use commandline interface(CLI) which is more"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "intuitive than searching through multiple menus for a command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Highly customizable: Add as many flashcards as you want to the program and edit them anytime"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Flexible: Easily create flashcard sets from any combination of your existing flashcards"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Multiple modes: Normal flashcard mode for memorizing or a quiz mode to test yourself"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Original source code from AddressBook-Level3 project created by https://se-education.org[SE-EDU] initiative"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 1,
      "lzw12345": 15,
      "-": 21
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "AddressBook - Level 3 was developed by the https://github.com/AY1920S1-CS2103-T14-3[AY1920S1-CS2103-T14-3] team. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d He Songchi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "image::akimatsu98.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "{empty}[https://github.com/Akimatsu98[github]]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Responsibilities: User Interface, Help command, add command, delete command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Jolyn Tan"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "image::jolynnn8d.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "{empty}[https://github.com/jolynnn8D[github]]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Responsibilities: List command, edit command, flip command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Liang Boyuan"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "image::oscar-b-liang.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "{empty}[https://github.com/Oscar-B-Liang[github]]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Responsibilities: Time Command, find command, Integration"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Ling Zhi Wei"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "image::lzw12345.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "{empty}[https://github.com/lzw12345[github]]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Responsibilities: Tag Command, quiz command, progress command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 18,
      "-": 29
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S1-CS2103-T14-3/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* *Email us* : You can also reach our team members at:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "****"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* Jolyn: `jolyn.tan.sq @ u.nus.edu`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* Zhi Wei: `e0031605 @ u.nus.edu`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* Songchi: `e0322951 @ u.nus.edu`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* Boyuan: `e0253688 @ u.nus.edu`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "****"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "jolynnn8D": 9
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "\u003d FlashMind - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ":repoURL: https://github.com/AY1920S1-CS2103-T14-3/main.git"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "By: `Team SE-EDU`      Since: `Jun 2016`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "The `.puml` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the \u003c\u003cUsingPlantUml#, Using PlantUML guide\u003e\u003e to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has two classes called link:{repoURL}/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Undo/Redo feature"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Proposed Implementation"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoSequenceDiagram.png[]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState5.png[]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* needs to memorize a large amount of discrete knowledge like vocabulary"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* want to check his/her progress over a period of time"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Value proposition*: manage short knowledge like vocabulary faster than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "|`* * *` |new user |see usage instructions |refer to instructions when I forget how to use the App"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* * *` |user |add a new flashcard |"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* * *` |user |delete a flashcard |remove flashcards that I have already firmly memorized"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* * *` |user |find a flashcard by keywords in its question or answer |locate details of flashcards without having to go through the entire list"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* * *` |user |tag the flashcards |group them based on their fields"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* * *` |user |start a quiz |train myself on the flashcards"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* * *` |user |see my statistics over time | I know what parts I need to train more, what parts I am weak at"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* *` |user |edit a flashcard |do adjustment on the cards instead of typing the question and answer all over again"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* *` |user |import flashcards from other documents |add a lot of questions into the system without typing them one by one"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* *` |user |set time limit to each flashcard |"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`* *` |user |set up a deadline to train on each set of flashcards |"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "|`*` |user with many persons in the address book |sort persons by name |locate a person easily"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`*` |user |automatically judge my answer to my short answer question |I can know how well I am doing"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "|`*` |user |automatically decide duplicate flashcard |I will add same flashcard into the system multiple times"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "(For all use cases below, the *System* is the `AddressBook` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC01 - Find a flashcard ID number"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1.  User requests to list flashcards."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2.  FlashMind shows a list of flashcards."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3.  User finds the flashcard ID number."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 1a. The user requests to list flashcards based on tags or keywords."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 1a1. FlashMind shows the list of flashcards under the given tag or whose question or answer matches the keyword."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case resumes at step 3."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 1b. The flashcard list is empty."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC02 - Delete a flashcard"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1.  User [.underline]#finds the flashcard ID number (UC01)#."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2.  User request to delete the flashcard with given ID number."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3.  FlashMind deletes the flashcard."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2a. The given ID number is invalid."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2a1. FlashMind shows an error message."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC03 - Tag a flashcard"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1.  User [.underline]#finds the flashcard ID number (UC01)#."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2.  User requires to tag the flashcard with a given tag name."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3.  FlashMind creates a new tag with the given tag name and put the flashcard under the given tag name."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2a. The given tag already exist, but the target flashcard is not under this tag yet."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2a1. FlashMind puts the given flashcard under the existing tag instead of creating a new tag."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2b. The target flashcard is already under the given tag."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2b1. FlashMind shows an error message."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2c. The input flashcard ID number is invalid."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2c1. FlashMind shows an error message."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2d. The given tag name is empty."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2d1. FlashMind shows an error message including the constraints on tag names."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC04 - edit a flashcard"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1. User [.underline]#finds the flashcard ID number (UC01)#."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2. User request to edit the question or answer of a flashcard."
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3. FlashMind updates the question or answer on the given flashcard."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2a. The requested question or answer is in wrong format"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2a1. FlashMind shows an error message including the constraints of the question and answer."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2b. The input flashcard Id number is invalid"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 2b1. FlashMind shows an error message."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC05 - find a tag name"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "1. User request to list all the flashcard sets with the same tags."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "2. FlashMind shows a list of all current flashcard sets."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "3. User finds the particular set he or she desires."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 2a. The tag list is empty."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "** 2a1. System displays an error message."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "user case ends."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC06 - edit a tag name"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1. User [.underline]#finds the tag (UC05)#."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2. User requests to update the tag name."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3. FlashMind updates the name of the tag."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 4a. The tag user wants to update does not exist."
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 4a1. FlashMind shows an error message."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 4b. The new tag name is invalid."
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 4b1. FlashMind shows an error message including the constraints on the tag name."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC07 - delete a tag from the tag list"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1. User [.underline]#finds the tag (UC05)#."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2. User requests to delete the tag."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3. FlashMind deletes the tag from all flashcards with this tag and delete it from the tag list."
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 4a. The tag user wants to delete does not exist."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 4a1. FlashMind shows an error message."
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC08 - delete a tag from a flashcard"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1. User [.underline]#finds the flashcard (UC01)#."
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2. User requests to delete the tag from the flashcard."
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3. FlashMind deletes the tag from the flashcard."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 4a. The tag user wants to delete does not exist."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 4a1. FlashMind shows an error message."
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "+"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC09 - Start a quiz on a tag"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Precondition: The tag exists in the database"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "1. User starts a quiz on a tag"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "2. FlashMind shows a question"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "3. User answers the question"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "4. FlashMind displays result"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "5. User confirms the result"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* steps 2-5 are repeated until all the flashcard in the tag have been displayed."
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "6. Quiz shows the results of the quiz"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* 3a. User does not give an answer"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 3a1. FlashMind waits for the set period"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** 3a2. User still has no answer"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** Use case resumes from step 4 (question is marked wrong)"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* *a. At any time, User decides to quit the quiz"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** *a1. FlashMind  requests to confirm the cancellation."
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** *a2. User confirms the cancellation."
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "** use case ends"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "\u003d\u003d\u003d Use case: UC10 - View all the available commands"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "1.  User enters `help` to ask FlashMind for all the commands."
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "2.  System responds by providing all the available commands."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "\u003d\u003d\u003d Use case: UC11 - Start a quiz on a set of flashcards with the same tag"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "1. User [.underline]#finds the tag that he or she wants to do a quiz on (UC05)#"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "2. System finds the particular flashcard set with the same tag and wait for further commands."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "3. User sets the time limit for each flashcard and tells the system to start the quiz."
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "4. User does the timed quiz."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "5. At the end of the quiz, system will show useful statistics to the user."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "+"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* 2a. The desired flashcard set is not found."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "** 2a1. System reports error."
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* *a. User wants end the quiz prematurely at any time during the quiz mode."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "+"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "** *a1. User types in `exit` +"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "   *a2. System exits the quiz, displays a goodbye message and skips the statistics part. +"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "   Use case ends."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "\u003d\u003d\u003d Use case: UC12 - View the statistics of a set of flashcards"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Actor: User"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "1.  User [.underline]#finds the particular set of flashcards he or she desires (UC05)#"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "2.  System displays the statistics of that flashcard set with the same tag."
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "+"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* 1a. The given flashcard set name is invalid or does not exist."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "+"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "** 1a1. FlashMind displays an error message."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "+"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Use case resumes at step 1."
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Use case: UC13 - Show progress of tag"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "Actor: user"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "Precondition: Tag exists in the system."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "1. User requests for the progress of a tag"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "2. System shows the statistics of the desired tag"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ".  Should be able to hold up to 1000 flashcards without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ".  If the stored flashcard list is very long, all commands should still be executed at a fast speed, with minimal sluggishness."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ".  Should be able to minimize loss of stored flashcard information if the app closes due to unforeseen external circumstances."
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ".  Command format should be easily understandable and intuitive to make it easier then using a GUI interface"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "[[flashcard]] Flashcard::"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "A digital card that contains a short piece of information like an English word or a geography common knowledge. Normally used by people to facilitate the memorization process."
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "\u003d\u003d\u003d Deleting a flashcard"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ". Deleting a flashcard  while all flashcards (in a tagged set/in the all-flashcard list) are listed"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ".. Prerequisites: List all flashcards using the `list` command. Multiple flashcards in the list."
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ".. Test case: `delete 000001` +"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "   Expected: First flashcard with ID 1 is deleted from the list."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ".. Test case: `delete 000000` +"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "   Expected: No flashcard is deleted. Error details shown in the status message."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size or ID number is negative)"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 232,
      "lzw12345": 12,
      "Akimatsu98": 90,
      "-": 417
    }
  },
  {
    "path": "docs/Documentation.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "\u003d Flashback - Documentation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level3/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "We use asciidoc for writing documentation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "We chose asciidoc over Markdown because asciidoc, although a bit more complex than Markdown, provides more flexibility in formatting."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Editing Documentation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to learn how to render `.adoc` files locally to preview the end result of your edits."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can download the AsciiDoc plugin for IntelliJ, which allows you to preview the changes you have made to your `.adoc` files in real-time."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Editing Diagrams"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingPlantUml#, UsingPlantUml.adoc\u003e\u003e to find out how to create and update the UML diagrams in the developer guide."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Publishing Documentation"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "See \u003c\u003cUsingTravis#deploying-github-pages, UsingTravis.adoc\u003e\u003e to learn how to deploy GitHub Pages using Travis."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Converting Documentation to PDF format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "We use https://www.google.com/chrome/browser/desktop/[Google Chrome] for converting documentation to PDF format, as Chrome\u0027s PDF engine preserves hyperlinks used in webpages."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the steps to convert the project documentation files to PDF format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".  Follow the instructions in \u003c\u003cUsingGradle#rendering-asciidoc-files, UsingGradle.adoc\u003e\u003e to convert the AsciiDoc files in the `docs/` directory to HTML format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ".  Go to your generated HTML files in the `build/docs` folder, right click on them and select `Open with` -\u003e `Google Chrome`."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ".  Within Chrome, click on the `Print` option in Chrome\u0027s menu."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ".  Set the destination to `Save as PDF`, then click `Save` to save a copy of the file in PDF format. For best results, use the settings indicated in the screenshot below."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ".Saving documentation as PDF files in Chrome"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "image::chrome_save_as_pdf.png[width\u003d\"300\"]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-SiteWideDocSettings]]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site-wide Documentation Settings"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "The link:{repoURL}/build.gradle[`build.gradle`] file specifies some project-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how all documentation files within this project are rendered."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in the `build.gradle` file will use their *default value*, if any."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ".List of site-wide attributes"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-name`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "|The name of the website."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "If set, the name will be displayed near the top of the page."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-githuburl`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "|URL to the site\u0027s repository on https://github.com[GitHub]."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Setting this will add a \"View on GitHub\" link in the navigation bar."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-seedu`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "|Define this attribute if the project is an official SE-EDU project."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "This will render the SE-EDU navigation bar at the top of the page, and add some SE-EDU-specific navigation items."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "[[Docs-PerFileDocSettings]]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Per-file Documentation Settings"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Each `.adoc` file may also specify some file-specific https://asciidoctor.org/docs/user-manual/#attributes[asciidoc attributes] which affects how the file is rendered."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "Asciidoctor\u0027s https://asciidoctor.org/docs/user-manual/#builtin-attributes[built-in attributes] may be specified and used as well."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Attributes left unset in `.adoc` files will use their *default value*, if any."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[cols\u003d\"1,2a,1\", options\u003d\"header\"]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ".List of per-file attributes, excluding Asciidoctor\u0027s built-in attributes"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "|Attribute name |Description |Default value"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "|`site-section`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "|Site section that the document belongs to."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "This will cause the associated item in the navigation bar to be highlighted."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "One of: `UserGuide`, `DeveloperGuide`, ``LearningOutcomes``{asterisk}, `AboutUs`, `ContactUs`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "_{asterisk} Official SE-EDU projects only_"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "|`no-site-header`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "|Set this attribute to remove the site navigation bar."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "|_not set_"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Template"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/stylesheets[`docs/stylesheets`] are the https://developer.mozilla.org/en-US/docs/Web/CSS[CSS stylesheets] of the site."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "You can modify them to change some properties of the site\u0027s design."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "The files in link:{repoURL}/docs/templates[`docs/templates`] controls the rendering of `.adoc` files into HTML5."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "These template files are written in a mixture of https://www.ruby-lang.org[Ruby] and http://slim-lang.com[Slim]."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "[WARNING]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Modifying the template files in link:{repoURL}/docs/templates[`docs/templates`] requires some knowledge and experience with Ruby and Asciidoctor\u0027s API."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "You should only modify them if you need greater control over the site\u0027s layout than what stylesheets can provide."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The SE-EDU team does not provide support for modified template files."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 1,
      "-": 122
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "\u003d Flashback - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "By: `SEEDU`      Since: `JUN 2016`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Flashback helps students to use their time breaks to memorize things"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "like vocabulary and some general knowledges, especially those who prefer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "command line interface (CLI) over clicks. Everything is organized into"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "flashcards, each contain one question. Users can also tag the flashcards"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "to group them and see their progress over time through statistics."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ".  Download the latest `flashback.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for your flashback."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* *`list`* : lists all flashcards"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* *`add How long is Mount Blanc Tunnel? | 11611m`*: Add a flashcard about Mount Blanc Tunnel"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* **`delete`**`3` : deletes the flashcard with ID number 3."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "* Items in square brackets are optional e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* Items with `…` after them can be used multiple times including zero times e.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Parameters can be in any order e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* To view all the available commands that the user can use. Use help command +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "\u003d\u003d\u003d Taging flashcards to form a set"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "Tags existing flashcards with a particular keyword. +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Format: `tag ID TAGNAME`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Adds the tag to the flashcard with the specified ID"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* TAGNAME can be an existing tag or a new tag"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* To use existing tags the TAGNAME entered must match the exiting tag exactly"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "****"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `Tag 1 Biology` +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Assigns a Biology tag to flashcard 1"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Adding new flashcards"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Add a new flashcard and specify its question and answer. The system will automatically"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "generate its ID number. +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Format: `add QUESTION|ANSWER`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "****"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* Both QUESTION and ANSWER must be provided by the user."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "****"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `add What is the tallest mountain? | Mount Everest` : Creates a new flashcard with the given question and answer."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Listing all flashcards and tags"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "Shows a list of all existing flashcards (classified by sets). +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "Format: `list TAG`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `list all` : Lists all the existing flashcard."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `list engvocab` : Lists all flashcards in the set"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "engvocab (i.e with the tag engvocab)."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `list tag` : List all the existing tags."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Editing a flashcard"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "Edits an existing flashcard in the address book. +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Format: `edit ID [-q NEW_QUESTION] [-a NEW_ANSWER]`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "* Edits the flashcard with the specified `ID`. The ID is a unique ID generated for each flashcard."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `edit 100342 -q What is the tallest mountain?` +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Edits the question of the card with unique id 100342 to \"What is the tallest mountain?\"."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `edit 100342 -a Mount Everest`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Edits the answer of the card with unique id 100342 to \"Mount Everest\"."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "\u003d\u003d\u003d Quiz mode"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Starts a quiz using a particular set of flashcards. +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `quiz set TAGNAME`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `quiz set TAGNAME SECONDS`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* start a quiz using the flashcards from the tag given by TAGNAME"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Default is 30 seconds per flashcard before it marks wrong and displays the next flashcard"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Optionally can set the question delay by entering the number of SECONDS of delay"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `quiz` : creates a new quiz with a random flashcard."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `quiz set Biology` : creates a new quiz using flashcards from the biology tag"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `quiz set Biology 60` : creates a new quiz using flashcards from the biology tag however the default delay timer is now 1 minute or 60 seconds"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "\u003d\u003d\u003d Display current progress"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Shows the current progress of a set of flashcards. +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Format: `progress TAGNAME`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* Statistics shown include number of completed cards and accuracy"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "* TAGNAME indicates the tag to be reviewed"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `progress \u003cBiology\u003e` : Displays the progress of a the flashcards tagged with Biology."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Delete a flashcard"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Deletes the specified flashcard from the list of all flashcards. +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "Format: `delete FLASHCARD_ID`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* Deletes the person with the specified `FLASHCARD_ID`."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* The ID of a flashcard refers to the specific number assigned to that flashcard upon creation."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "* The flashcard ID *must be a positive 6-digit integer* 000001, 000002, 000003, ..."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "****"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `delete 100342` : Removes the flashcard with unique ID 100342"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Set up time limit for each flashcard"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "The default time limit for each flashcard in the quiz mode is 30 seconds."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "The user can also custom time limit for each flashcard or flashcards under"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "one tag. +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Format: `time ID SECONDS` to set up time limit for a single flashcard"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "or `time TAG SECONDS` to set up time limit for all cards in a tag."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "****"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* time limits sets latest will take effect. That is to say, if card number 15"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "is under tag \"tunnel\", then the user first assign card 15 with time limit 40 seconds"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "then assign tag tunnel with time limit 50 seconds, then card 15 will have time limit"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "50 seconds because this time limit is assigned later."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `time 15 40` : Set the time limit of card with ID 15 to be 40 seconds."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `time tunnel 40` : Set the time limit of cards with tag \"tunnel\" with time limit 40 seconds."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Finding a flashcard"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Find a flashcard based on the keyword in its question, answer or ID. This can also find"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "tags. +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Format: `find -c KEYWORD` to find a particular flashcard or `find -t KEYWORD`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "to find a particular tag based on keywords in its name."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "****"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* The key word must not be empty."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "****"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "* `find -c Blanc` : Find flashcards whose question or answer contains string \"Blanc\"."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "\u003d\u003d\u003d Exiting the program"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving the data"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "Flashcards are saved in the hard disk automatically after any command that changes the data. +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to save manually."
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 77,
      "lzw12345": 13,
      "jolynnn8D": 6,
      "-": 108,
      "Akimatsu98": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Answer.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Represent the answers of each flashcard"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class Answer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"The answer can take in any value, but it should not be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private String answer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Answer(String answer) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Modify the answer on the flashcard"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newAnswer the updated answer of the flashcard"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setAnswer(String newAnswer) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        answer \u003d newAnswer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Compare with the user input to check if the answer is correct or not"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Only applies to MCQ questions"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param input The answer input by the user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if the answer matches, false otherwise"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean compareAnswer(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return input.equals(answer);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While searching for a flashcard by keyword s, decide whether this answer matches the keyword or not"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s The target keyword"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if the answer contains the keyword, false otherwise"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return answer.contains(s);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return answer.hashCode();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 33,
      "jolynnn8D": 22
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/CardId.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The unique identity number for each flash card."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Guarantees: Each card\u0027s id number is unique."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class CardId {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    // The id number for the next flash card generated."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static int frontier \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private final int identityNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Constructor of the class, automatically generate a unique identity number."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public CardId() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        identityNumber \u003d frontier;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        frontier++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getIdentityNumber() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return identityNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While finding a flashcard, compare that the id number of this card matches the search string or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s The search parameter, target string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if the id number indeed contains the target information, false otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String idAsString \u003d Integer.toString(identityNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return idAsString.contains(s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return Integer.toString(identityNumber);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!(other instanceof CardId)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return identityNumber \u003d\u003d ((CardId) other).getIdentityNumber();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return Integer.hashCode(identityNumber);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Flashcard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.DuplicateTagException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.TagNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * A flashcard must contain the following components"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * 1. Question on the card"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * 2. Answer on the card"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * 3. A unique card ID to recognize itself to other cards"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * 4. A score class to record how many correct and wrong answers from the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * 5. A list of tags"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public abstract class Flashcard {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private Question question;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private Answer answer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private Score score;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private CardId id;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private ArrayList\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Question and Answer must be specified."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Flashcard(Question question, Answer answer) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.score \u003d new Score();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.id \u003d new CardId();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Question getQuestion() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Answer getAnswer() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Score getScore() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return score;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public CardId getId() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ArrayList\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setQuestion(String newQuestion) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        question.setQuestion(newQuestion);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setAnswer(String newAnswer) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        answer.setAnswer(newAnswer);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Add a new tag to the flash card"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Guarantees there are no duplicate tags"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param t the tag to be added to the card"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws DuplicateTagException if this card already has this tag"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addTag(Tag t) throws DuplicateTagException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (tags.contains(t)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new DuplicateTagException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tags.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Delete the given tag from the flash card"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Guarantees non-existing tags cannot be deleted"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param t the tag to be deleted from the card"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws TagNotFoundException if this flashcard does not have the given tag"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void deleteTag(Tag t) throws TagNotFoundException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!tags.contains(t)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new TagNotFoundException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tags.remove(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * When the user make an answer to a question, change the score of this flashcard"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void isAnswerCorrect(boolean correct) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (correct) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            score.addCorrectAnswerNumber();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            score.addWrongAnswerNumber();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    };"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While searching for a flashcard, decide that whether this flashcard contains the keyword or not."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s the keyword we are looking for"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if question, answer or the id contains the keyword, false otherwise"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return question.contains(s) || answer.contains(s) || id.contains(s);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * comparing whether two flash cards are the same or not."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Since each flashcard has a unique id number, only comparing this id is enough"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (!(other instanceof Flashcard)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        Flashcard otherFlashcard \u003d (Flashcard) other;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return otherFlashcard.getId() \u003d\u003d this.getId();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While showing a card in the form of a string, we show its id number and its question."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return String.format(\"Question: %s, id: %d\", getQuestion(), id.getIdentityNumber());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return id.hashCode();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 90,
      "lzw12345": 3,
      "jolynnn8D": 44
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/FlashcardList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.CardNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.DuplicateTagException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The list of all flashcard list, meanwhile, holding the {@Code TagManager}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "public class FlashcardList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    private ArrayList\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    private TagManager tagManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public FlashcardList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        flashcards \u003d new ArrayList\u003cFlashcard\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tagManager \u003d new TagManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e getAllFlashcards() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return flashcards;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Fetch the particular flashcard based on its id number"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param flashcardId the id number of the flashcard we are looking for"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return the flashcard with this id number"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws CardNotFoundException if flashcard with this number was not found"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Flashcard getFlashcard(int flashcardId) throws CardNotFoundException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            if (flashcard.getId().getIdentityNumber() \u003d\u003d flashcardId) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                return flashcard;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        throw new CardNotFoundException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Edit the question on a particular flashcard"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param flashcardId the id number of the flashcard we want to edit"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newQuestion the updated question for the target flashcard"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setFlashcard(int flashcardId, String newQuestion) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        Flashcard editFlashcard \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        editFlashcard.setQuestion(newQuestion);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Edit the answer on a particular flashcard"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param flashcardId the id number of the flashcard we want to edit"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newAnswer the updated answer for the target flashcard"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setFlashcardAnswer(int flashcardId, String newAnswer) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Flashcard editFlashcard \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        editFlashcard.setAnswer(newAnswer);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Edit the options on a particular MCQ flash card"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param flashcardId the id number of the flashcard we want to edit"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newOptions the updated options for the target flashcard"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws RuntimeException if the card with this id is not found or the corresponding card is not an MCQ card."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setFlashcardOptions(int flashcardId, ArrayList\u003cString\u003e newOptions) throws RuntimeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Flashcard editFlashcard \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!(editFlashcard instanceof McqFlashcard)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new RuntimeException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        McqFlashcard castedEditFlashcard \u003d (McqFlashcard) editFlashcard;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        castedEditFlashcard.setOptions(newOptions);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Look up for a flashcard whose id number, question or answer contains this specific keyword"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param search the keyword we want to look up for"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return list of the flashcards that matches the keyword"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws CardNotFoundException when no cards of this keyword was found"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e findFlashcard(String search) throws CardNotFoundException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cFlashcard\u003e matchingFlashcards \u003d new ArrayList\u003cFlashcard\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            if (flashcard.contains(search)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                matchingFlashcards.add(flashcard);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (matchingFlashcards.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new CardNotFoundException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return matchingFlashcards;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * delete the flashcard based on its id"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param flashcardId the id of the flashcard we want to delete"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void deleteFlashcard (int flashcardId) throws CardNotFoundException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        Flashcard flashcardDelete \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Tag tag : flashcardDelete.getTags()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            tag.deleteFlashcard(flashcardId);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        flashcards.remove(flashcardDelete);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * add an MCQ flash card into the list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param question the question of the flashcard"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param options the options of the flashcard"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param answer the answer of this MCQ, simply \"A\", \"B\", \"C\", \"D\"."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public void addFlashcard (String question, ArrayList\u003cString\u003e options, String answer) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        flashcards.add(new McqFlashcard(new McqQuestion(question, options), new Answer(answer)));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * add a shortAnswer flash card into the list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param question the question of the flashcard"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param answer the options of the flashcard"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addFlashcard(String question, String answer) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        flashcards.add(new ShortAnswerFlashcard(new ShortAnswerQuestion(question), new Answer(answer)));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Give the target flashcard a tag. If this tag currently does not exist, create a new one in the TagManager"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param flashcardId the flashcard to be tagged"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param tagName the tag to be added to the flashcard"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagFlashcard(int flashcardId, String tagName) throws DuplicateTagException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!tagManager.hasTag(tagName)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            tagManager.addTag(tagName);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Flashcard targetCard \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag targetTag \u003d tagManager.getTag(tagName);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (targetTag.hasCard(targetCard)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new DuplicateTagException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        targetCard.addTag(targetTag);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        targetTag.addFlashcard(targetCard);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 100,
      "lzw12345": 43
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/McqFlashcard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Represent the flashcards with MCQ questions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class McqFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public McqFlashcard(McqQuestion question, Answer answer) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        super(question, answer);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * edit the options in the MCQ"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * TODO: Consider if we can edit a particular option instead of changing them as a whole"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newOptions the updated options for the flashcard"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setOptions(ArrayList\u003cString\u003e newOptions) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        McqQuestion castedTargetQuestion \u003d (McqQuestion) getQuestion();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        castedTargetQuestion.setOptions(newOptions);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 17,
      "jolynnn8D": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/McqQuestion.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The question used for MCQ classes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * It is by itself an MCQ question containing question statement and choices"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class McqQuestion extends Question {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private List\u003cString\u003e options;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Both question and options must be specified"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public McqQuestion(String question, List\u003cString\u003e options) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        super(question);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * edit the options of this question"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newOptions the updated options for this question"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setOptions(List\u003cString\u003e newOptions) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.options \u003d newOptions;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String result \u003d this.getQuestion();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        for (String s : options) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            result +\u003d \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            result +\u003d s;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 18,
      "jolynnn8D": 20
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Question.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Represent the question on each flashcard"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public abstract class Question {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"The question can take in any value, but it should not be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private String question;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Question(String question) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Modify the question on the flashcard"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newQuestion The updated question of the flashcard"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setQuestion(String newQuestion) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        question \u003d newQuestion;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While searching for a flashcard, check if the question contains the target message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s the target message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if the question contains target message, false otherwise"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return question.contains(s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (!(other instanceof Question)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        Question otherQuestion \u003d (Question) other;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return otherQuestion.getQuestion().equals(this.getQuestion());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return this.question;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return question.hashCode();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 27,
      "jolynnn8D": 30
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Score.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The record of how many correct and wrong answers has the user done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class Score {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_TOTAL \u003d \"Total number of practices: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_CORRECT \u003d \"Number of correct answers: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_WRONG \u003d \"Number of wrong answer: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_PERCENTAGE \u003d \"Total Correct rate: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int correctAnswerNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int wrongAnswerNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Score() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        correctAnswerNumber \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        wrongAnswerNumber \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getCorrectAnswerNumber() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return correctAnswerNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getWrongAnswerNumber() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return wrongAnswerNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addCorrectAnswerNumber() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        correctAnswerNumber++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addWrongAnswerNumber() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        wrongAnswerNumber++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getTotalAnswerNumber() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return correctAnswerNumber + wrongAnswerNumber;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public float getCorrectRate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return correctAnswerNumber / getCorrectAnswerNumber();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String totalMessage \u003d MESSAGE_BEFORE_TOTAL + Integer.toString(getTotalAnswerNumber()) + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String correctMessage \u003d MESSAGE_BEFORE_CORRECT + Integer.toString(getCorrectAnswerNumber()) + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String wrongMessage \u003d MESSAGE_BEFORE_WRONG + Integer.toString(getWrongAnswerNumber()) + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String percentageMessage \u003d MESSAGE_BEFORE_PERCENTAGE + Float.toString(getCorrectRate()) + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return totalMessage + correctMessage + wrongMessage + percentageMessage;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/ShortAnswerFlashcard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Represent the flashcard of a short answer."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class ShortAnswerFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ShortAnswerFlashcard(ShortAnswerQuestion question, Answer answer) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        super(question, answer);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 5,
      "jolynnn8D": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/ShortAnswerQuestion.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The question type for short answer flash cards"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class ShortAnswerQuestion extends Question {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public ShortAnswerQuestion(String question) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        super(question);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 5,
      "jolynnn8D": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Statistics.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Helps calculating the correct rate for each flashcard, tag and the whole flashcard set."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Sum up all the correct answers in a tag"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static int getTagTotalCorrect(Tag tag) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        int overallCorrectAnswer \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Flashcard card : tag.getFlashcards()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            overallCorrectAnswer \u003d overallCorrectAnswer + card.getScore().getCorrectAnswerNumber();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return overallCorrectAnswer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Sum up all the wrong answers in a tag"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static int getTagTotalWrong(Tag tag) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        int overallWrongAnswers \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Flashcard card : tag.getFlashcards()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            overallWrongAnswers \u003d overallWrongAnswers + card.getScore().getWrongAnswerNumber();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return overallWrongAnswers;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Sum up practice times in a tag"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static int getTagTotal(Tag tag) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return getTagTotalCorrect(tag) + getTagTotalWrong(tag);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Sum up all the correct answers in the cardList"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static int getTotalCorrect(FlashcardList cardList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        int overallCorrectAnswer \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Flashcard card : cardList.getAllFlashcards()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            overallCorrectAnswer \u003d overallCorrectAnswer + card.getScore().getCorrectAnswerNumber();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return overallCorrectAnswer;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Sum up all the wrong answers in the cardList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static int getTotalWrong(FlashcardList cardList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        int overallWrongAnswer \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Flashcard card : cardList.getAllFlashcards()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            overallWrongAnswer \u003d overallWrongAnswer + card.getScore().getWrongAnswerNumber();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return overallWrongAnswer;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Sum up practice times in a cardList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static int getTotal(FlashcardList cardList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return getTotalCorrect(cardList) + getTotalWrong(cardList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 46,
      "lzw12345": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Tag.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.CardNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.DuplicateCardException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " * A class that represents each individual tagged flashcard set"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Guarantees: every tag must have a unique name, no two tags can have the same name"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"The tag name can take in any value, but it should not be empty \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private ArrayList\u003cFlashcard\u003e cardList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Tag(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        cardList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Add a new flashcard to the tag"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param c the flashcard to be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws DuplicateCardException if the card is already under this tag"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addFlashcard(Flashcard c) throws DuplicateCardException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (cardList.contains(c)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new DuplicateCardException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        cardList.add(c);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Get the list of all the flashcards under this tag."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a list of all flashcards."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return cardList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Remove a particular flashcard from the tag based on the flashcard ID"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param id the ID of the flashcard to be removed"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws CardNotFoundException the card with this ID is not found under this tag"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void deleteFlashcard(int id) throws CardNotFoundException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        boolean cardWasFound \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Flashcard item : cardList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            if (item.getId().getIdentityNumber() \u003d\u003d id) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                cardList.remove(item);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                cardWasFound \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!cardWasFound) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            throw new CardNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Edit the name of the tag to a new one."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param newName the new name of the tag."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void setName(String newName) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While searching for a tag, check whether the tag name contains the search keyword."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s The search keyword"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if the tag name contains the keyword, false otherwise"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return name.contains(s);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Check whether the tag contains a particular flashcard."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param c the flashcard to be checked."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return whether the flashcard exists."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean hasCard(Flashcard c) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return cardList.contains(c);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While deleting a tag from the {@Code TagManager}, the tag should at the same time being detached from all"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * of its flashcard."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    void detachFromAllCards() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Flashcard card : cardList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            card.deleteTag(this);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Check if two tags are equivalent to each other."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Two tags are the same if and only if their names are the same."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param other the other tag to be tested."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a boolean variable that informs whether the two tags are the same."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        if (!(other instanceof Tag)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Tag otherTag \u003d (Tag) other;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return otherTag.getName().equals(getName());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return name.hashCode();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 72,
      "Akimatsu98": 43,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/TagManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.DuplicateTagException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.TagNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " *  A class for managing flashcard tagged sets."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class TagManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private ArrayList\u003cTag\u003e allTags;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public TagManager() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        allTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Identify all the relevant tags whose names contain the keyword."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param keyword the user input keyword for searching."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a list of all relevant tags."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ArrayList\u003cTag\u003e findTag(String keyword) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        ArrayList\u003cTag\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            if (item.contains(keyword)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                resultList.add(item);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Based on the EXACT tag name, decide if there is a tag with this name inside the tag manager"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s the EXACT tag name we are looking for"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if such a tag with this name exists, false otherwise"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean hasTag(String s) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            if (item.getName().equals(s)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Based on the EXACT tag name given, return back the corresponding tag"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s the EXACT tag name we are looking for"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return the tag with this name"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws TagNotFoundException if such a tag does not exist"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Tag getTag(String s) throws TagNotFoundException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            if (item.getName().equals(s)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                return item;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        throw new TagNotFoundException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * list out all tags"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return a list of all the tags."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public ArrayList\u003cTag\u003e getAllTags() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return allTags;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * edit the name of a tag to a new name"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param tagName the original tag name"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param newName the new tag name"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws TagNotFoundException if the tag with this name does not exist"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void setTagName(String tagName, String newName) throws TagNotFoundException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag editTag \u003d getTag(tagName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        editTag.setName(newName);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * add a new tag to the current tag list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param name name of the new tag"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @throws DuplicateTagException if this tag name already exists"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addTag(String name) throws DuplicateTagException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assert (!hasTag(name)) : \"Flashcard list failed to check for duplicate tags.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        allTags.add(new Tag(name));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Remove a specific tag from the current tag list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param name the name of tag that is to be deleted."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void deleteTag(String name) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag targetTag \u003d getTag(name);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        targetTag.detachFromAllCards();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        allTags.remove(targetTag);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Check whether there exists a tag with the given name."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param name the name of the tag to be searched."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a boolean variable that informs either true or false"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public boolean contains(String name) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return allTags.contains(new Tag(name));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 57,
      "Akimatsu98": 53
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/TimeLimit.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The time limit for doing a quiz"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Guarantees: Does not exceed an hour, minutes and seconds are both between 0 and 60."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class TimeLimit {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_CONSTRAINTS \u003d \"Time limit must be in the format of two integers,\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            + \"representing minutes and seconds respectively. Since this a flashcard system, we do not \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            + \"support time limit more than or equals to an hour.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_AFTER_MINUTES \u003d \" minutes \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_AFTER_SECONDS \u003d \" seconds \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int minutes;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int seconds;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    // Default Time Limit, 1 minute."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public TimeLimit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        minutes \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        seconds \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public TimeLimit(int minutes, int seconds) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        checkArgument(isValidTimeLimit(minutes, seconds), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.minutes \u003d minutes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.seconds \u003d seconds;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Ensure both minutes and seconds are between 0 and 60"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * The total time should be less than an hour"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private boolean isValidTimeLimit(int minutes, int seconds) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (seconds \u003c 0 || minutes \u003c 0 || seconds \u003e\u003d 60 || minutes \u003e\u003d 60) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String minutesString \u003d Integer.toString(minutes);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String secondsString \u003d Integer.toString(seconds);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return minutesString + MESSAGE_AFTER_MINUTES + secondsString + MESSAGE_AFTER_SECONDS;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!(other instanceof TimeLimit)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return minutes \u003d\u003d ((TimeLimit) other).minutes \u0026\u0026 seconds \u003d\u003d ((TimeLimit) other).seconds;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/exceptions/CardNotFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The exception when a particular card id cannot be found"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class CardNotFoundException extends RuntimeException { }"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/exceptions/DuplicateCardException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Exception for when adding two same cards into a tag"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class DuplicateCardException extends RuntimeException { }"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 6
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/exceptions/DuplicateTagException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Exception when same tags are added to a flashcard"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class DuplicateTagException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/exceptions/TagNotFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Exception when tag of a given name cannot be found"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class TagNotFoundException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 7
    }
  },
  {
    "path": "src/test/java/seedu/address/flashcard/DefaultFlashCards.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Some built in flashcards to be used in testing periods"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class DefaultFlashCards {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static final ShortAnswerFlashcard MOUNT_BLANC_CARD \u003d new ShortAnswerFlashcard("
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            new ShortAnswerQuestion(\"What happened in Mount Blanc Tunnel in 1999?\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            new Answer(\"The Mount Blanc Tunnel fire\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static final ShortAnswerFlashcard KANETSU_CARD \u003d new ShortAnswerFlashcard("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            new ShortAnswerQuestion(\"How long is Kan-etsu Tunnel?\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            new Answer(\"11055m + 10926m\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public static final ShortAnswerFlashcard ZHONGANANSHAN_CARD \u003d new ShortAnswerFlashcard("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            new ShortAnswerQuestion(\"How long is Zhongnanshan tunnel?\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            new Answer(\"18062m\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 17
    }
  },
  {
    "path": "src/test/java/seedu/address/flashcard/FlashCardTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static seedu.address.flashcard.DefaultFlashCards.KANETSU_CARD;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class FlashCardTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void equivalent_card_test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        ShortAnswerFlashcard kanestuCard \u003d new ShortAnswerFlashcard("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                new ShortAnswerQuestion(\"How long is Kan-etsu Tunnel?\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                new Answer(\"11055m + 10926m\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertFalse(KANETSU_CARD.equals(kanestuCard));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 19
    }
  },
  {
    "path": "src/test/java/seedu/address/flashcard/TagTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static seedu.address.flashcard.DefaultFlashCards.KANETSU_CARD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static seedu.address.flashcard.DefaultFlashCards.MOUNT_BLANC_CARD;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.CardNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import seedu.address.flashcard.exceptions.DuplicateCardException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class TagTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagEquivalentTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels1 \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels2 \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels1.addFlashcard(MOUNT_BLANC_CARD);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels1.addFlashcard(KANETSU_CARD);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertTrue(tunnels1.equals(tunnels2));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagDifferentTest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels1 \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels2 \u003d new Tag(\"long tunnels\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels1.addFlashcard(MOUNT_BLANC_CARD);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels2.addFlashcard(MOUNT_BLANC_CARD);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertFalse(tunnels1.equals(tunnels2));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagDuplicateCardTest() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels.addFlashcard(KANETSU_CARD);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertThrows(DuplicateCardException.class, () -\u003e tunnels.addFlashcard(KANETSU_CARD));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagValidDeleteCardTest() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels.addFlashcard(KANETSU_CARD);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels.addFlashcard(MOUNT_BLANC_CARD);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels.deleteFlashcard(KANETSU_CARD.getId().getIdentityNumber());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertEquals(MOUNT_BLANC_CARD, tunnels.getFlashcards().get(0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagInvalidDeleteCardTest() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnels \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels.addFlashcard(KANETSU_CARD);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnels.addFlashcard(MOUNT_BLANC_CARD);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertThrows(CardNotFoundException.class, () -\u003e tunnels.deleteFlashcard(15));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void tagDetachFromCardTest() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        ShortAnswerFlashcard Zhongnanshan \u003d new ShortAnswerFlashcard("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                new ShortAnswerQuestion(\"How long is the Zhongnanshan tunnel?\"),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "                new Answer(\"18062m\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Tag tunnel \u003d new Tag(\"tunnels\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnel.addFlashcard(Zhongnanshan);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        Zhongnanshan.addTag(tunnel);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        tunnel.detachFromAllCards();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertTrue(Zhongnanshan.getTags().isEmpty());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 71
    }
  }
]
