[
  {
    "path": "src/main/java/seedu/address/flashcard/Answer.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class Answer {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    String answer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Answer(String answer) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String getAnswer() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String setAnswer() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return \"You\u0027ve set the answer to \" + answer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean compareAnswer(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return input.equals(this.answer);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/CardId.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The unique identity number for each flash card."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Guarantees: Each card\u0027s id number is unique."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class CardId {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    // The id number for the next flash card generated."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static int frontier \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private final int identityNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Constructor of the class, automatically generate a unique identity number."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public CardId() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        identityNumber \u003d frontier;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        frontier++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getIdentityNumber() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return identityNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * While finding a flashcard, compare that the id number of this card matches the search string or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @param s The search parameter, target string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * @return true if the id number indeed contains the target information, false otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String idAsString \u003d Integer.toString(identityNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return idAsString.contains(s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return Integer.toString(identityNumber);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!(other instanceof CardId)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return identityNumber \u003d\u003d ((CardId) other).getIdentityNumber();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return identityNumber;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 55
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Flashcard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public abstract class Flashcard {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    Question question;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    Answer answer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    Score score;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    Id id;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    FlashcardTagList tags;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Question getQuestion() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Answer getAnswer() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return answer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Score getScore() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return score;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public Id getId() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public FlashcardTagList getTags() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String addTag(Tag t) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        tags.addTag(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return \"You\u0027ve successfully added a tag.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public void setId(int flashcardId){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        Id \u003d new Id(flashcardId); // im assuming this will be possible"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public void setflashcardTagList (ArrayList\u003cTag\u003e tags){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        this.tags \u003d new FlashcarTagList(tags);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String deleteTag(Tag t) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        tags.deleteTag(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return \"You\u0027ve deleted this tag.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (!(other instanceof Flashcard)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        Flashcard otherFlashcard \u003d (Flashcard) other;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return otherFlashcard.getId() \u003d\u003d this.getId();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return String.format(\"Question: %s, id: %d\", this.getQuestion(), this.Id.getId());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lzw12345": 10,
      "jolynnn8D": 61
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/FlashcardList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "public class FlashcardList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    private ArrayList\u003cFlashcard\u003e flashcards;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    private TagManager tagManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    private static Integer ID \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public FlashcardList(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        flashcards \u003d new ArrayList\u003cFlashcard\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        tagManager \u003d new TagManager(new ArrayList\u003cTag\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public Flashcard getFlashcard(int flashccardId){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Flashcard flashcard : flashcards){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            if (flashcard.getId().getId() \u003d\u003d flashccardId) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                return flashcard;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public void setFlashcard(int flashcardId, String answer,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                             String question, ArrayList\u003cString\u003e options){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        Flashcard editFlashcard \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        Flashcard edittedFlashcard;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        if(!options.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "           edittedFlashcard \u003d new McqFlashcard(new McqQuestion(question, options), new Answer(answer));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            edittedFlashcard \u003d new ShortAnswerFlashcard(new ShortAnswerQuestion(question), new Answer(answer));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        edittedFlashcard.setId(flashcardId);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        edittedFlashcard.setflashcardTagList(editFlashcard.getTags().getTags());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        flashcards.remove(editFlashcard);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        flashcards.add(edittedFlashcard);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e findFlashcard(String search){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cFlashcard\u003e matchingFlashcards \u003d new ArrayList\u003cFlashcard\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for(Flashcard flashcard : flashcards){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            if(flashcard.equals(search)){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                matchingFlashcards.add(flashcard);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return matchingFlashcards;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public Tag getTag(String tagName) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for(Tag tag : tagManager.getTags()){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            if (tag.getName() \u003d\u003d tagName){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                return tag;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public void deleteFlashcard (int flashcardId){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        Flashcard flashcardDelete \u003d getFlashcard(flashcardId);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Tag tag : flashcardDelete.getTags().getTags()){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            tag.deleteFlashcard(flashcardId); //idk what to use here new id object or int id"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        flashcards.remove(flashcardDelete);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public void addFlashcard (String question, ArrayList\u003cString\u003e options, String answer){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        if (options.size()\u003e1){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            flashcards.add(new McqFlashcard(new McqQuestion(question, options), new Answer(answer));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            flashcards.add(new ShortAnswerFlashcard(new ShortAnswerQuestion(question), new Answer(answer)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lzw12345": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/McqFlashcard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class McqFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public McqFlashcard(Question question, Answer answer) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.tags \u003d new FlashcardTagList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/McqQuestion.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class McqQuestion extends Question {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    List\u003cString\u003e options;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public McqQuestion(String question) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public McqQuestion(String question, List\u003cString\u003e options) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this(question);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        String result \u003d question;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        for (String s : options) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            result +\u003d \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            result +\u003d s;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 27
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Question.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public abstract class Question {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    String question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String getQuestion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return question;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String setQuestion(String question) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return \"You\u0027ve successfully set the question to \" + question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return this.question.contains(s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        if (!(other instanceof Question)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "       Question otherQuestion \u003d (Question) other;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return otherQuestion.getQuestion().equals(this.getQuestion());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        return this.question;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Score.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The record of how many correct and wrong answers has the user done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class Score {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_TOTAL \u003d \"Total number of practices: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_CORRECT \u003d \"Number of correct answers: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_WRONG \u003d \"Number of wrong answer: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_BEFORE_PERCENTAGE \u003d \"Total Correct rate: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int correctAnswerNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int wrongAnswerNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public Score() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        correctAnswerNumber \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        wrongAnswerNumber \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getCorrectAnswerNumber() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return correctAnswerNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getWrongAnswerNumber() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return wrongAnswerNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addCorrectAnswerNumber() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        correctAnswerNumber++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void addWrongAnswerNumber() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        wrongAnswerNumber++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public int getTotalAnswerNumber() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return correctAnswerNumber + wrongAnswerNumber;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public float getCorrectRate() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return correctAnswerNumber / getCorrectAnswerNumber();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String totalMessage \u003d MESSAGE_BEFORE_TOTAL + Integer.toString(getTotalAnswerNumber()) + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String correctMessage \u003d MESSAGE_BEFORE_CORRECT + Integer.toString(getCorrectAnswerNumber()) + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String wrongMessage \u003d MESSAGE_BEFORE_WRONG + Integer.toString(getWrongAnswerNumber()) + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String percentageMessage \u003d MESSAGE_BEFORE_PERCENTAGE + Float.toString(getCorrectRate()) + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return totalMessage + correctMessage + wrongMessage + percentageMessage;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 52
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/ShortAnswerFlashcard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class ShortAnswerFlashcard extends Flashcard {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public ShortAnswerFlashcard(Question question, Answer answer) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.answer \u003d answer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.tags \u003d new FlashcardTagList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/ShortAnswerQuestion.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "public class ShortAnswerQuestion extends Question {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    public ShortAnswerQuestion(String question) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "        this.question \u003d question;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jolynnn8D"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jolynnn8D": 7
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Statistics.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "public class Statistics {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public static ArrayList\u003cString\u003e getTagPercentage (ArrayList\u003cTag\u003e tags){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int overallTotal \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int overallTotalCorrectAns \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int tagTotal \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int tagTotalCorrect \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cString\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Tag tag : tags){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                tagTotal \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                tagTotalCorrect \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            for(Flashcard flashcard  : tag.getFlashcards()){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                tagTotal +\u003d flashcard.getScore().getTotalAnswerNumber();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                overallTotal +\u003d tagTotal;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                tagTotalCorrect +\u003d flashcard.getScore().getCorrectAnswerNumber();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                overallTotalCorrectAns +\u003d tagTotalCorrect;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String result \u003d \"Total percentage under \" + tag.getName() + \": \" + ((tagTotalCorrect/tagTotal)*100) +\"%\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(result);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        if(tags.size() \u003e 1){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String totalResult \u003d \"Total percentage for these tags: \" + (overallTotalCorrectAns/overallTotal) + \"%\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(totalResult);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public static ArrayList\u003cString\u003e getFlashcardPercentage(ArrayList\u003cFlashcard\u003e flashcards){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int overallTotal \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int overallTotalCorrectAns \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cString\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String result \u003d \"Percentage correct for \" + flashcard.toString()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                    + \": \" + flashcard.getScore().getCorrectRate()*100 + \"%\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(flashcard.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            overallTotal +\u003d flashcard.getScore().getTotalAnswerNumber();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            overallTotalCorrectAns +\u003d flashcard.getScore().getCorrectAnswerNumber();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        if(flashcards.size() \u003e 1){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String totalResult \u003d \"Total percentage for these tags: \" + (overallTotalCorrectAns/overallTotal) + \"%\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(totalResult);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public static ArrayList\u003cString\u003e getTagAnswerCount(ArrayList\u003cTag\u003e tags){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int overallTotal \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int tagTotal \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cString\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Tag tag : tags){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            tagTotal \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            for(Flashcard flashcard  : tag.getFlashcards()){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                tagTotal +\u003d flashcard.getScore().getTotalAnswerNumber();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                overallTotal +\u003d tagTotal;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String result \u003d \"Total attempts under \" + tag.getName() + \": \" + overallTotal;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(result);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        if(tags.size() \u003e 1){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String totalResult \u003d \"Total attempts for these tags: \" + overallTotal;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(totalResult);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public static ArrayList\u003cString\u003e getFlashcardAnswerCount(ArrayList\u003cFlashcard\u003e flashcards){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        int overallTotal \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cString\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Flashcard flashcard : flashcards) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String result \u003d \"Total attempts for \" + flashcard.toString()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                    + \": \" + flashcard.getScore().getTotalAnswerNumber();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            overallTotal +\u003d flashcard.getScore().getTotalAnswerNumber();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        if(flashcards.size() \u003e 1){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            String totalResult \u003d \"Total attempts: \" + overallTotal;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            results.add(totalResult);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public static ArrayList\u003cString\u003e getCardsRead(Tag tag){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return getCardsRead(tag.getFlashcards());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lzw12345"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    public static ArrayList\u003cString\u003e getCardsRead(ArrayList\u003cFlashcard\u003e flashcards){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        ArrayList\u003cString\u003e cardsRead \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        for (Flashcard flashcard : flashcards){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            if(flashcard.getScore().getTotalAnswerNumber()\u003e0){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "                cardsRead.add(flashcard.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        cardsRead.add(\"total unread cards:\" + (flashcards.size()-cardsRead.size()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "        return cardsRead;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lzw12345"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lzw12345": 102
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/Tag.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " * A class that represents each individual tagged flashcard set"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private ArrayList\u003cFlashcard\u003e cardList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Constructor for a tag object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param _name the name of the tag to be initialized."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public Tag(String _name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.name \u003d _name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        cardList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Give a list of all the flashcards under this tag."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a list of all flashcards."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ArrayList\u003cFlashcard\u003e getFlashcards() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cFlashcard\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        resultList.addAll(cardList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Remove a particular flashcard from the tag based on the flashcard ID."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param id the ID of the flashcard to be removed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void deleteFlashcard(ID id) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cFlashcard\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        newList.addAll(cardList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Flashcard item: newList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (item.getId() \u003d\u003d id.getId()) { // there are two different getId() and ID stored as int"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                newList.remove(item);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.cardList \u003d newList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Add a new flashcard to the tag."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param c the flashcard to be added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void addFlashcard(Flashcard c) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cFlashcard\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        newList.addAll(cardList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        newList.add(c);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.cardList \u003d newList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Inform the name of the tag."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return name of the tag."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Edit the name of the tag to a new one."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param newName the new name of the tag."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void setName(String newName) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Check whether the tag contains a particular flashcard."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param c the flashcard to be checked."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return whether the flashcard exists."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public boolean contains(Flashcard c) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        boolean isContain \u003d false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Flashcard item: cardList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (item.equals(c)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                isContain \u003d true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return isContain;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Check if two tags are equivalent to each other."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param other the other tag to be tested."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a boolean variable that informs whether the two tags are the same."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        if (!(other instanceof Tag)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Tag otherTag \u003d (Tag) other;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return otherTag.getName().equals(getName())"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                \u0026\u0026 otherTag.getFlashCards().equals(getFlashcards());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 97,
      "-": 19
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/TagManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " *  A class for managing flashcard tagged sets."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class TagManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    private ArrayList\u003cTag\u003e allTags;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Constructor for TagManager."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param _allTags a list of all the tagged sets."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public TagManager(ArrayList\u003cTag\u003e _allTags) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.allTags \u003d _allTags;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Identify all the relevant tags whose names contain the keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param keyword the user input keyword for searching."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a list of all relevant tags."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ArrayList\u003cTag\u003e findTag(String keyword) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cTag\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (item.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                resultList.add(item);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Give all the tags currently available."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a list of all the tags."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public ArrayList\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cTag\u003e resultList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        resultList.addAll(allTags);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return resultList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Edit the name of a tag to a new name."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param tagName the original tag name."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param newName the new tag name."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void setTagName(String tagName, String newName) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Tag cur \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (item.getName().equals(tagName)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                cur \u003d item;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        cur.setName(newName);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Add a new tag to the current tag list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param name name of the new tag."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void addTag(String name) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        Tag t \u003d new Tag(name);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        newTags.addAll(allTags);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        newTags.add(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.allTags \u003d newTags;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Remove a specific tag from the current tag list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param name the name of tag that is to be deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public void deleteTag(String name) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        ArrayList\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        newTags.addAll(allTags);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (item.getName().equals(name)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                newTags.remove(item);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        this.allTags \u003d newTags;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * Check whether there exists a tag with the given name."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @param name the name of the tag to be searched."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     * @return a boolean variable that informs either true or false"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    public boolean contains(String name) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        boolean isContain \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        for (Tag item : allTags) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            if (item.getName().equals(name)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "                isContain \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "        return isContain;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Akimatsu98": 107
    }
  },
  {
    "path": "src/main/java/seedu/address/flashcard/TimeLimit.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * The time limit for doing a quiz"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " * Guarantees: Does not exceed an hour, minutes and seconds are both between 0 and 60."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class TimeLimit {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_CONSTRAINTS \u003d \"Time limit must be in the format of two integers,\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            + \"representing minutes and seconds respectively. Since this a flashcard system, we do not \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            + \"support time limit more than or equals to an hour.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_AFTER_MINUTES \u003d \" minutes \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private static final String MESSAGE_AFTER_SECONDS \u003d \" seconds \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int minutes;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private int seconds;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    // Default Time Limit, 1 minute."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public TimeLimit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        minutes \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        seconds \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public TimeLimit(int minutes, int seconds) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        checkArgument(isValidTimeLimit(minutes, seconds), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.minutes \u003d minutes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        this.seconds \u003d seconds;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * Ensure both minutes and seconds are between 0 and 60"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     * The total time should be less than an hour"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private boolean isValidTimeLimit(int minutes, int seconds) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (seconds \u003c 0 || minutes \u003c 0 || seconds \u003e\u003d 60 || minutes \u003e\u003d 60) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String minutesString \u003d Integer.toString(minutes);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        String secondsString \u003d Integer.toString(seconds);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return minutesString + MESSAGE_AFTER_MINUTES + secondsString + MESSAGE_AFTER_SECONDS;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        if (!(other instanceof TimeLimit)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        return minutes \u003d\u003d ((TimeLimit) other).minutes \u0026\u0026 seconds \u003d\u003d ((TimeLimit) other).seconds;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 60
    }
  },
  {
    "path": "src/main/java/seedu/address/model/tag/Tag1.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.tag;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Tag in the address book."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Akimatsu98"
        },
        "content": "public class Tag1 {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public final String tagName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code Tag}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tagName A valid tag name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Tag(String tagName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(tagName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tagName \u003d tagName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if a given string is a valid tag name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isValidTagName(String test) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return test.matches(VALIDATION_REGEX);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                || (other instanceof Tag // instanceof handles nulls"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return tagName.hashCode();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * Format state as text for viewing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027[\u0027 + tagName + \u0027]\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 53,
      "Akimatsu98": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/flashcard/CardIdTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "package seedu.address.flashcard;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "public class CardIdTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private CardId id1 \u003d new CardId();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private CardId id2 \u003d new CardId();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private CardId id3 \u003d new CardId();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    private CardId id4 \u003d new CardId();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    public void generateIdTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertEquals(0, id1.getIdentityNumber());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertEquals(1, id2.getIdentityNumber());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertEquals(2, id3.getIdentityNumber());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "        assertEquals(3, id4.getIdentityNumber());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Oscar-B-Liang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Oscar-B-Liang": 21
    }
  }
]
