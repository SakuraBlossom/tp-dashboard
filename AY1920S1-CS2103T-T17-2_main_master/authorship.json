[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d TravEzy"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103T-T17-2/main[image:https://travis-ci.org/AY1920S1-CS2103T-T17-2/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "Hey you! Yes you! Do you like travelling around the world but find it hard to manage your expenses while travelling abroad?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "Well then we just have the solution for you. Introducing Travezy, with Travezy, we help NUS students who love travelling plan their"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "travel plans while keeping a lookout of their expenditure throughout the time. Travezy is your one stop trusty desktop"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "application to organize your plans and financial needs. But wait, there\u0027s more, Travezy is optimized for those who prefer"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "to work with a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "type fast this is definitely the app for you! So what are you waiting for? Get your copy of Travezy today!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cLearningOutcomes#, Learning Outcomes\u003e\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pohlinwei"
        },
        "content": "* The original source code is obtained from AddressBook-Level3 project by https://se-education.org[SE-EDU]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "* Travezy would like to acknowledge the following awesome source code and guidance in creating this application."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "AddressBook-Level3 project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "* UI is designed with the use of Flaticons"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "pohlinwei": 2,
      "tishyakhanna97": 1,
      "-": 27,
      "ngzhaoming": 9
    }
  },
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// Gradle Configuration File"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// user guide available at http://gradle.org/docs/5.2.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.gradle.api.tasks.testing.logging.TestLogEvent"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027jacoco\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.kt3k.coveralls\u0027 version \u00272.4.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.asciidoctor.convert\u0027 version \u00271.5.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "// Specifies the entry point of the application"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "mainClassName \u003d \u0027seedu.address.Main\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "jacocoTestReport {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        csv.enabled false"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        html.destination file(\"${buildDir}/jacocoHtml\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    String jUnitVersion \u003d \u00275.4.0\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveName \u003d \u0027addressbook.jar\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "task coverage(type: JacocoReport) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    classDirectories.from files(sourceSets.main.output)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    executionData.from files(jacocoTestReport.executionData)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    afterEvaluate {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        classDirectories.from files(classDirectories.files.collect {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        html.enabled \u003d true"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        xml.enabled \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "coveralls {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDirs \u003d sourceSets.main.allSource.srcDirs.absolutePath"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    jacocoReportPath \u003d \"${buildDir}/reports/jacoco/coverage/coverage.xml\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "tasks.coveralls {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn coverage"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    onlyIf { System.env.\u0027CI\u0027 }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        events TestLogEvent.FAILED, TestLogEvent.SKIPPED"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        // Prints the currently running test\u0027s name in the CI\u0027s build log,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // so that we can check if tests are being silently skipped or"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        // stalling the build."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (System.env.\u0027CI\u0027) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            events \u003c\u003c TestLogEvent.STARTED"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    jacoco {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        destinationFile \u003d new File(\"${buildDir}/jacoco/test.exec\")"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    backends \u0027html5\u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    sourceDir \u0027docs\u0027"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    outputDir \"${buildDir}/docs\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    options \u003d ["
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        template_dirs: [file(\"${sourceDir}/templates\")],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    attributes \u003d ["
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        linkcss: true,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        stylesheet: \u0027gh-pages.css\u0027,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027source-highlighter\u0027: \u0027coderay\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        icons: \u0027font\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        experimental: true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        sectlinks: true,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        idprefix: \u0027\u0027,  // for compatibility with GitHub preview"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        idseparator: \u0027-\u0027,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-root\u0027: \"${sourceDir}\",  // must be the same as sourceDir, do not modify"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        \u0027site-name\u0027: \u0027TravEzy\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        \u0027site-githuburl\u0027: \u0027https://ay1920s1-cs2103t-t17-2.github.io/main/\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027site-seedu\u0027: true,  // delete this line if your project is not a fork (not a SE-EDU project)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    options[\u0027template_dirs\u0027].each {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        inputs.files fileTree(it)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "// Copies stylesheets into the directory containing generated HTML files as"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "// Asciidoctor does not copy linked CSS files to the output directory when rendering."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "// This is needed for linked stylesheets and embedded stylesheets which import other files."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "task copyStylesheets(type: Copy) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    from \"${asciidoctor.sourceDir}/stylesheets\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    into \"${asciidoctor.outputDir}/html5/stylesheets\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "asciidoctor.dependsOn copyStylesheets"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "defaultTasks \u0027clean\u0027, \u0027test\u0027, \u0027coverage\u0027, \u0027asciidoctor\u0027"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 2,
      "-": 153
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "TravEzy was developed by the https://ay1920s1-cs2103t-t17-2.github.io/main/ team. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "We are a team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d\u003d\u003d Ong Bing Jue"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "image::bjhoohaha.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "{empty}[https://github.com/bjhoohaha[github]]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Role: Chief Operations Officer +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Responsibilities: Developer - Address Book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d\u003d\u003d Hon Hao Chen"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "image::honhaochen.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "{empty}[http://github.com/honhaochen[github]]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Role: Chief Financial Officer +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Responsibilities: Developer - Financial Tracker"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d\u003d\u003d Ng Zhao Ming"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "image::ngzhaoming.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "{empty}[http://github.com/ngzhaoming[github]]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Role: Chief Technology Officer +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Responsibilities: Developer - Itinerary"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d\u003d\u003d Poh Lin Wei"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "image::pohlinwei.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "{empty}[http://github.com/pohlinwei[github]]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Role: Chief Strategy Officer +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Responsibilities: Developer - Calendar"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d\u003d\u003d Tishya Khanna"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "image::tishyakhanna97.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "{empty}[http://github.com/tishyakhanna97[github]]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Role: Chief Information Officer +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Responsibilities: Developer - Travel Diary"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 32,
      "-": 30
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/se-edu/addressbook-level3/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* *Email us* : You can also reach us at `travEzy@gmail.com`"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 1,
      "-": 6
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d AddressBook Level 3 - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ":repoURL: https://ay1920s1-cs2103t-t17-2.github.io/main/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "By: `Team SE-EDU`      Since: `Jun 2016`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "The `.puml` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the \u003c\u003cUsingPlantUml#, Using PlantUML guide\u003e\u003e to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has two classes called link:{repoURL}/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Undo/Redo feature"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Proposed Implementation"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoSequenceDiagram.png[]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState5.png[]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* loves to travel frequently"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* travels to many different countries"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* has a need to manage a significant number of contacts from different countries"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* has a need to keep track of travelling expenses"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* lends and pay money to different contacts regularly"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* loves to plan in advance"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* has a need to keep track of different commitments in school"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* love to record its travel itinerary"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* achievements driven"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* has a need to know his/her current progress in completing the achievement"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* motivated to finish his/her accomplishments"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* loves to keep a memory of his/her travels"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "* has a need to write down a diary of his/her travel experiences"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "* prefer desktop apps over other types"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "*Value proposition*: All-in-one travel manager for planning, scheduling, tracking for a user that loves typing commands."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* * *` | traveller | record down all my travelling stories. |  my sweet memories stored"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* * *` | student who likes travelling | record all my spendings on my trip | keep track of my budgets"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* * *` | NUS student with unusually high workload | have a calendar planner | plan ahead"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* * *` | student who needs friends and likes to travel desperately |manage my travel itineraries |keep track of my travel schedule during travels"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* * *` | undisciplined individual | keep track of my expenses | limit the accumulation of credit card debts"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* * *` | competitive individual|keep track of my own progress towards different achievements | challenge myself"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* *` | student with many friends abroad |have an Address Book | contact my friends who are living in that area"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* *` | student who needs friends and likes to travel desperately | have an Address Book | keep my friends’ contact categorized with different countries"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* *` | NUS student with unusually high workload | detect conflicts in my calendar schedule | know when I\u0027m free to travel around the world"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "|`* *` | undisciplined individual | keep track of my expenses | limit the accumulation of credit card debts"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "|`* *` | user | hide \u003c\u003cprivate-contact-detail,private contact details\u003e\u003e by default |minimize chance of someone else seeing them by accident"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "|`*` |user with many persons in the address book |sort persons by name |locate a person easily"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "(For all use cases below, the *System* is the `AddressBook` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Use case: Delete person"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "1.  User requests to list persons"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "2.  AddressBook shows a list of persons"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "3.  User requests to delete a specific person in the list"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "4.  AddressBook deletes the person"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "* 2a. The list is empty."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "** 3a1. AddressBook shows an error message."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "\u003d\u003d\u003d Use case: Finance Tracker"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "\u003d\u003d\u003d Use case: Calendar"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "\u003d\u003d\u003d Use case: Diary"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "\u003d\u003d\u003d Use case:  Itinerary"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "bjhoohaha"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "[[private-contact-detail]] Private contact detail::"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "A contact detail that is not meant to be shared with others"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 1,
      "bjhoohaha": 49,
      "-": 419
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\u003d TravEzy"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ":repoURL: https://ay1920s1-cs2103t-t17-2.github.io/main/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "By: `Team SE-EDU`      Since: `Jun 2016`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Team: *T17-2* +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Content page*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Introduction"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Quickstart"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Features"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Financial Tracker"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Friend Contact List"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Calendar (Event Planner)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Event Itinerary"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. TRIVAGO, price comparison"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Travel Recommendations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. NUS trips"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Travel Diary with pictures"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. Engaging Notifications"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". FAQ"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Command Summary"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Introduction*"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Welcome and thank you for choosing The Traveller Diary (TTD) to store precious memories of your overseas trips. This travelling diary is well suited for *NUS students who are passionate about travelling across the globe* and *prefer to use a desktop app for managing their trips abroad*. If you can type fast, TTD can help you *store, customize and manage your posts effectively*. Not only that, TTD can *access your contacts with their details* done faster than traditional GUI apps. But wait, there’s more! TTD also has a built in *financial tracker to track your expenses during each trip* to ensure you spend wisely. What are you waiting for? Hop on to this user guide and we will travel to +++\u003cu\u003e+++Section 2, “Quick Start”+++\u003c/u\u003e+++ to get a copy of your TTD and get started with it. Enjoy! 😊"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Quickstart*"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Ensure you java Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Download the latest TravellerDiary.jar"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Copy the file to the folder you want to use as the home folder for your Traveller Diary."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ". Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Type the command in the command box and press *\u003cEnter\u003e *to execute it."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "E.g. typing *help* and pressing *\u003cEnter\u003e* will open the help window."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ". Examples commands you may try:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. *list*: list all contacts"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. *delete 3* : deletes the 2nd contact shown in the current list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ".. *exit*: exits the app"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Refer to Section 3, “Features” for details of each command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Features*"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*1. Financial Tracker*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Keep track of your travelling expenses."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addFin    : add a new expense +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "updateFin : update an existing expense +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showFin   : show all your expenses +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteFin : delete an expense +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "calFin    : calculate your total expense"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The Financial Tracker also provide extra extensions.  +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "(Extensions the group may want to consider)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Check which friend in your contact list owes you money* +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "You can update on which friend has previously borrowed money for you. Your personal traveller diary will then keep track of it in case you forget."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Reminder notification when you exceed your budget* +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Afraid of over-budget? Your personal traveller diary prevents you from doing that by prompting you that you have over spent."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*2. Friend Contact List*"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Helps you to keep track of your friends’ contact information."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addCont    : add a new friend to the contact information +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " updateCont : update friend information in the contact list +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " showCont   : show all friends in the contact list +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteCont : delete friends in the contact list +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " listCont   : list all friends in the contact list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The friend contact list feature also provide certain extra extensions.  +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*duplicateContacts*"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The program does not allow duplicate contacts. Contacts with the same information cannot be added to the contact list. The program may display a possible warning alert when user tries to add duplicate contact information."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*tag / label*"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The program supports tagging / labelling of contacts. The user can tag a contact as ‘ close friends’ for example. This allows the user to identify different contact with similar contact information by tag / label. These tags / label can be color-coded or display icons."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*categories*"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can also categorize a particular contact into categories. This may be useful to differentiate between friends from _‘school’_ category or _‘work’ _category."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*profilePicture*"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "A user profile picture can be added into the contact list. This allow the user to customize a profile picture for a particular contact."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*stickersPack*"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "A way for the user to beautify the appearance for the contact list. _e.g. Putting a crown / tiara / emoticons / sticker pack to beautify the standard contact layout in the contact list._"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*3. Calendar (Event Planner)*"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Gives you an overview of when you will be free to travel and recommends when will be a      +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "suitable time to travel."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addCommitment      : adds commitment to indicate that you won’t be able to  +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "          travel on a day or over a period of time due to commitments  +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                                                during the public holidays/school vacation +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "  addCommitments     : similar to the above, but we can add multiple commitments  +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "          at once +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "              addPublicHoliday   : adds a public holiday from your calendar +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addSchoolBreak     : adds the start and end date of your school vacation +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addTrip            : adds your trip to the calendar +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "  checkAvailability  : checks whether you are available for the stated period of  +"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "          time +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "  clearCommitments   : clears all commitments for the stated period of time +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteCommitment   : deletes commitment from your calendar +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteSchoolBreak  : deletes school break from your calendar +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "  deletePublicHoliday: deletes public holiday from your calendar +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " editBreak        : edits the start and/or end date of your school vacation  +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " editCommitment   : edits the duration of your commitment +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " showAvailability : shows you when you have 3 or more “free” days in the given  +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "      period of time which you have specified +"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "              suggestDate      : suggests when you can travel for numDays"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The event planner feature also provides  certain extra extensions.  +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*advice*"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "This command suggests whether travelling at the stated period of time is a good idea. For instance, when exams or external commitments are around the corner, the user will be reminded of his/her responsibilities and will be asked whether he/she is sure that he/she wants to go ahead with the travelling plans."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*automaticHolidayDetector *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Informs user of public holidays and adds them to the calendar without requiring the user to specify it."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*4. Event Itinerary*"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Helps you to plan how exactly you want to spend each hour of your trip. Each event will be numbered numerically in increasing order."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addEvent [title]   : add a new event to your day, title no more than 50 chars +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " listEvent          : show all the events for that day +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " showEvent [index]  : show all the events for that day +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " updateEvent [index]: update an event in your day based on the index +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " sort [type]        : sort events based on the type (time, tag) +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " checkTimeslot      : checks current itinerary and shows empty time slots +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " repeatEvent [index]: repeat the event in your day based on the index +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " doneEvent [index]  : mark the event as done for the day +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteEvent [index]: delete an event in your day based on the index +"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " exitEvent   [index]: exit the"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "\tCustomize within each event selected."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addTime        : add the time for the event +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addDescription : add a description for the event +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addLocation    : add the location of the event +"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addNotes       : add additional notes / details for the event +"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addTag         : add a tag to the event for categorization purposes +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " delete [field] : delete the specified field for that particular event"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The event itinerary feature also provides  certain extra extensions.  +"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*repeatEvent*"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The program allows the user to repeat events such as tours or planned activities"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*tag*"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The program allows the user to tag and highlight events based on type, such as fun, educational, commute etc. This feature will also colour code the events so that the different types of events can be seen clearly on the calendar."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*archive*"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can archive events that he/she is unsure of and wants to review later."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*recommend*"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can get recommended activities to fill in gaps in the itinerary. The database for these recommended activities will be derived from the archive function."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*5. Travel Diary with pictures*"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addImage         : add new images to the specified entry conveniently +"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "appendToEntry    : appends text to the specified entry"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "createEntry      : creates a new entry in your diary +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteEntry      : deletes the specified entry of your diary +"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "editEntry        : edit the specified entry of your diary +"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "filterEntries    : filters the entries by looking out for the specified expression +"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "filterByTag      : filters the entries by the specified tag +"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "sortEntries      : sorts your entries in chronological order +"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "sortEntriesByTag : sorts your entries by tags +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "tagEntry         : tags your entry with the specified tag(s)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The Travel Diary feature also provides  certain extra extensions.  +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*memories*"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Reminds the user of entries s/he made a year ago."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*milestones*"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Congratulates the user when s/he met certain milestones (travelling to a continent that s/he has not previously visited, visiting one of the seven wonders of the world, etc.)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*6. TRIVAGO, Price comparison (Coming in V2.0)*"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Helps to compare the prices between two particular goods or services. Can be used to compare prices of lodging,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " addData     : add a new data to be used for price comparison +"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " showData    : show the prices for a selected data +"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteData  : delete data used for price comparison +"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " compareData : compare prices between two data +"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " reviewData  : review the previous few comparisons that user did +"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " listData    : list out all the data that user has inputted into TTD"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The friend contact list feature also provide certain extra extensions.  +"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*setConversionRates*"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Compare prices based on different countries’ currency and exchange rates. Allow user to also calculate the prices of goods using their home currency."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*tag*"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The program allows users to classify each data into different categories, such as AirBnB, hotels, restaurants, shopping centre goods."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*undo"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* +"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Allow the user to undo their previous comparison or action should they delete the wrong data using function deleteData."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*sort"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* +"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Based on the different taggings given by the user, it will help to sort the data based on the total price of each data."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*7. Travel Recommendations (Coming in V2.0)*"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Gives travel suggestions to the user."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " setDates    : set the dates for your proposed trip +"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " setPrice    : set your price range +"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " setType     : set the type of trip (Fun, educational etc) +"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " generate    : generate recommendations from stored diaries"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The travel recommendations feature also provides  certain extra extensions.  +"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*downloadTrips*"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can download pre planned trips and locations from online sources such as AirB\u0026B Top 10 travel locations."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*saveSources*"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can store preferred sources for trips, such as travel websites or personal blogs."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*8. NUS trips (Coming in V2.0)*"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Helps you get recommendations from NUS societies."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " loadTrips   : download trips from NUS societies +"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteTrips : delete certain NUS trips +"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " showTrip    : show your whole trip in a calendar view +"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " getSoc      : get societies from NUS which organise trips +"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " deleteSoc   : delete certain societies +"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " selectSoc   : select a certain society to load trips"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The NUS trips feature also provides  certain extra extensions.  +"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "_(Extensions the group may want to consider)_"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*favourite*"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can choose preferred societies (NUS mountaineers, CIP clubs)  to favourite."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*filter*"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can filter societies based on preferences such as cost, duration and type."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*9. Engaging Notifications (Coming in V2.0)*"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "New notifications will be used to alert the user. Notifications can be used to alert the user in the following circumstances:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* User set a manual reminder"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* Incomplete form _perhaps in the itinerary_"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* Upcoming trip"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "* Upcoming event in the calendar"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*reminders*"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can set a reminder on the calendar. When the reminder is due, there will be a new notification from the program."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*colourCode*"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The notification can have different color and design to differentiate between different types of notification. _Red _used to indicate danger while _Yellow _used to indicate warning, _Blue _for general notifications etc."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*growAndShrink*"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Grow and shrink animation for notifications."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*music*"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "A music will be played when the notification appears. Different music can be used for different notification."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*sendEmailNotification*"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "An email notification will be sent to the user when the notification appears. _Similar to LumiNUS sending user confirmation email when the post lecture survey is completed_"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*customizeNotification *"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "The user can create their own custom notification. Add colours, emoticons and use different notification styling for different alerts."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*popupAlerts*"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Reminders and notifications can be displayed in the form of popup alert to alert the user if something went wrong."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*snooze*"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "After setting the notification, the user can snooze the notification or reminder for the user to be reminded again."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*4. FAQ*"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *How do I backup my data onto cloud storage? +"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *Locate The Traveller Diary folder in your local drive and compact it into a zip file before uploading it onto a cloud storage online."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *How do I transfer my data onto another computer? +"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *Install The Traveller Diary in the other computer and overwrite the empty data file it creates with during start up with the file that contains the data of your previous TTD. Alternatively, you can store it in a cloud storage it first before retrieving it and transferring it into your new computer."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *Can I change the theme of the application? I prefer to work with a night theme interface."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *You can go to *settings → themes *→ *night mode *to toggle between day and night mode."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *Who can view my travel posts in my TTD? +"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *As TTD is a single user application, it is not opened to the public, and unable to be viewed by others. Hence, it is called “diary” for a reason, which stores discrete entries reporting events that happened throughout the day. Users can however, showcase their application in front of their friends to show off their overseas trips.**"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "** +"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *Is it possible to connect to social media such as Facebook, Snapchat, Instagram? +"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *Currently, it is not possible to connect to social media using TTD. However, we will consider implementing this feature in the future! Stay tuned for that! 😉"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: Is there any in-app purchase for this application?* +"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: NO there isn’t. TTD is created from a non-profit organization and we are not here to milk any of your gold coins! It is absolutely free! It cost nothing, zilch, nada, **零, nil, kosong. So what are you waiting for get TTD today!*"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *I’m having difficulties uploading the pictures onto the travel diary. +"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *The Traveller Diary only allow uploads of pictures that are in jpg or png. Unfortunately, we do not support gif. Do ensure that your pictures are below 25MB with the dimensions no bigger than 1920px x 1080px."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*Q: *Who can I contact should there be a bug or feedback that I would like to share? +"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*A: *Feel free to send an email to the developer team: mailto:thetravellerdiary@gmail.com[thetravellerdiary@gmail.com] and we will access to your queries within three working days. We also value your feedback and will use it to improve TTD. Thank you and looking forward to serving you better!"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "*5. Command Summary*"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Here is a summary for the list of features available:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Financial Tracker: +"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " \taddFin    : add a new expense +"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "updateFin : update an existing expense +"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showFin   : show all your expenses +"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteFin : delete an expense +"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "calFin    : calculate your total expense"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Friend Contact List: +"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addCont    : add a new friend to the contact information +"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "updateCont : update friend information in the contact list +"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showCont   : show all friends in the contact list +"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteCont : delete friends in the contact list +"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "listCont   : list all friends in the contact list"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Calendar (Event Planner): +"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addCommitment      : adds commitment to indicate that you won’t be able to  +"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " \t\t\t         travel on a day or over a period of time due to commitments  +"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                                              during the public holidays/school vacation +"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addCommitments     : similar to the above, but we can add multiple commitments  +"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        at once +"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            addPublicHoliday   : adds a public holiday from your calendar +"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addSchoolBreak     : adds the start and end date of your school vacation +"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addTrip             :  adds your trip to the calendar +"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "checkAvailability   :  checks whether you are available for the stated period of  +"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "             time +"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "clearCommitments    :  clears all commitments for the stated period of time +"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteCommitment    :  deletes commitment from your calendar +"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteSchoolBreak   :  deletes school break from your calendar +"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            deletePublicHoliday :  deletes public holiday from your calendar +"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "editBreak           : edits the start and/or end date of your school vacation  +"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "editCommitment      : edits the duration of your commitment +"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showAvailability    : shows you when you have 3 or more “free” days in the  +"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "          given period of time which you have specified +"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            suggestDate         : suggests when you can travel for numDays"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Event Itinerary: +"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addEvent    : add a new event to your day +"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "updateEvent : update an event in your day +"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showEvent   : show more information about your day +"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteEvent : delete an event from your day +"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "compareEvent: place multiple events in the same time slot for ease of comparison +"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showTrip    : show your whole trip in a calendar view"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "TRIVAGO, price comparison: +"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addData     : add a new data to be used for price comparison +"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showData    : show the prices for a selected data +"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteData  : delete data used for price comparison +"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "compareData : compare prices between two data +"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "reviewData  : review the previous few comparisons that user did +"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "listData    : list out all the data that user has inputted into TTD"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Travel Recommendations: +"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "setDates    : set the dates for your proposed trip +"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "setPrice    : set your price range +"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "setType     : set the type of trip (Fun, educational etc) +"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "generate    : generate recommendations from stored diaries"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "NUS trips: +"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "loadTrips   : download trips from NUS societies +"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteTrips : delete certain NUS trips +"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "showTrip    : show your whole trip in a calendar view +"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "getSoc      : get societies from NUS which organise trips +"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteSoc   : delete certain societies +"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "selectSoc   : select a certain society to load trips"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "Travel Diary with pictures: +"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "addImage         : add new images to the specified entry conveniently +"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "appendToEntry    : appends text to the specified entry"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "createEntry      : creates a new entry in your diary +"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "deleteEntry      : deletes the specified entry of your diary +"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "editEntry        : edit the specified entry of your diary +"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "filterEntries    : filters the entries by looking out for the specified expression +"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "filterByTag      : filters the entries by the specified tag +"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "sortEntries      : sorts your entries in chronological order +"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "sortEntriesByTag : sorts your entries by tags +"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "tagEntry         : tags your entry with the specified tag(s)"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 375,
      "-": 103
    }
  },
  {
    "path": "src/main/java/Itinerary_planner/EventItinerary/Event.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package EventItinerary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class Event {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private int time, num;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private String desc, location, tag, notes, title;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public Event(String title, int num) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.desc \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.location \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.notes \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String event \u003d printBorder() + \"\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                String.format(\"     | Num: %-3d | Title: %-40s|\\n\", num, title) +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private String printBorder() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // Allows up to 50 characters long in title"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return \"     o----------+------------------------------------------------o\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 34
    }
  },
  {
    "path": "src/main/java/Itinerary_planner/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import EventItinerary.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import TravezyInterface.EventList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import TravezyInterface.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import TravezyInterface.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "//v1.1 changes"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        EventList eventList \u003d new EventList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        eventList.add(new Event(\"test\", 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        while(ui.getActivityLevel() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            Parser.processCommand(command, ui, eventList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 27
    }
  },
  {
    "path": "src/main/java/Itinerary_planner/TravezyInterface/EventList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package TravezyInterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import EventItinerary.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class EventList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private ArrayList\u003cEvent\u003e eventList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private Random rand \u003d new Random();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    void addEventPrompt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String[] adj \u003d {\"Cool\", \"Awesome\", \"Amazing\", \"Brilliant\", \"Awesome Possum\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(printLine() + \"\\n     \" + adj[rand.nextInt(3)] +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"! I have added this event! Here are your events currently:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        printEventListBullet();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(printLine());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    void listEvent() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(printLine() + \"\\n     Here are your events currently:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        printEventListBullet();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(printLine());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    void showEvent(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(printLine() + \"\\n     Roger that! Here is the detail of the event:\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(eventList.get(index - 1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(printLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private void printEventListBullet() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        for (int i \u003d 0; i \u003c eventList.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            System.out.println(\"        \" + (i + 1) + \". \" + eventList.get(i).getTitle());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void add(Event event) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        eventList.add(event);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return eventList.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private String printLine() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return \"\\n★ ・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・★\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 55
    }
  },
  {
    "path": "src/main/java/Itinerary_planner/TravezyInterface/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package TravezyInterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import EventItinerary.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static void processCommand(String command, Ui ui, EventList eventList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String[] commandArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        switch(commandArr[0]) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            case \"addEvent\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                Event event \u003d new Event(getTitle(command), eventList.size() + 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                eventList.add(event);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                eventList.addEventPrompt();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            case \"listEvent\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                eventList.listEvent();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            case \"showEvent\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                eventList.showEvent(Integer.parseInt(commandArr[1]));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            case \"selectEvent\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                // Only can use level 2 commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                ui.setActivityLevel(2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                ui.setActivityLevel(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                ui.exit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                System.out.println(\"Hello world!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private static String getTitle(String command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String[] commandArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        StringJoiner sj \u003d new StringJoiner(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        for (int i \u003d 1; i \u003c commandArr.length; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            sj.add(commandArr[i]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return sj.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 52
    }
  },
  {
    "path": "src/main/java/Itinerary_planner/TravezyInterface/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package TravezyInterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private int activityLevel \u003d 1;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String logo \u003d \" _________  ________  ________  ___      ___ _______   ________      ___    ___ \\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"|\\\\___   ___\\\\\\\\   __  \\\\|\\\\   __  \\\\|\\\\  \\\\    /  /|\\\\  ___ \\\\ |\\\\_____  \\\\    |\\\\  \\\\  /  /|\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"\\\\|___ \\\\  \\\\_\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\  /  / | \\\\   __/| \\\\|___/  /|   \\\\ \\\\  \\\\/  / /\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"     \\\\ \\\\  \\\\ \\\\ \\\\   _  _\\\\ \\\\   __  \\\\ \\\\  \\\\/  / / \\\\ \\\\  \\\\_|/__   /  / /    \\\\ \\\\    / / \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"      \\\\ \\\\  \\\\ \\\\ \\\\  \\\\\\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\ \\\\    / /   \\\\ \\\\  \\\\_|\\\\ \\\\ /  /_/__    \\\\/  /  /  \\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"       \\\\ \\\\__\\\\ \\\\ \\\\__\\\\\\\\ _\\\\\\\\ \\\\__\\\\ \\\\__\\\\ \\\\__/ /     \\\\ \\\\_______\\\\\\\\________\\\\__/  / /    \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"        \\\\|__|  \\\\|__|\\\\|__|\\\\|__|\\\\|__|\\\\|__|/       \\\\|_______|\\\\|_______|\\\\___/ /     \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"                                                                   \\\\|___|/      \\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"                                                                                \\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String welcome \u003d \"Welcome to the itinerary planner, please use the helpItinerary command\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \"to view the commands supported by Travezy! \\uD83D\\uDE0A\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String greetings \u003d printLine() + logo + welcome + printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(greetings);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    void exit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String exit \u003d \"      Alrighty! Come back soon to add more exciting activities! \\uD83C\\uDF04\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String exitMessage \u003d printLine() + exit + printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        System.out.println(exitMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public int getActivityLevel() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return activityLevel;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    void setActivityLevel(int level) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        activityLevel \u003d level;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private String printLine() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return \"\\n★ ・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・★\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 42
    }
  },
  {
    "path": "src/main/java/Itinerary_planner/exceptions/TravezyException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class TravezyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public TravezyException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/MainApp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Config;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Version;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.DataConversionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.ConfigUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.StringUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.Logic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.LogicManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyUserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.AddressBookStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonAddressBookStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.JsonUserPrefsStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.StorageManager;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.UserPrefsStorage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.Ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.ui.UiManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Version VERSION \u003d new Version(0, 6, 0, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Logic logic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Model model;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config config;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    //Sets up all the components (shared)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        AppParameters appParameters \u003d AppParameters.parse(getParameters());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        config \u003d initConfig(appParameters.getConfigPath());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        initLogging(config);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        model \u003d initModelManager(storage, userPrefs);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        logic \u003d new LogicManager(model, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new UiManager(logic);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        ReadOnlyAddressBook initialData;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            addressBookOptional \u003d storage.readAddressBook();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!addressBookOptional.isPresent()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            initialData \u003d new AddressBook();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ModelManager(initialData, userPrefs);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    private void initLogging(Config config) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        LogsCenter.init(config);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * if {@code configFilePath} is null."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Config initConfig(Path configFilePath) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        Config initializedConfig;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        Path configFilePathUsed;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        if (configFilePath !\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Custom Config file specified \" + configFilePath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            configFilePathUsed \u003d configFilePath;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using config file : \" + configFilePathUsed);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d configOptional.orElse(new Config());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default config properties\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedConfig \u003d new Config();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update config file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedConfig;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * or a new {@code UserPrefs} with default configuration if errors occur when"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * reading from the file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    protected UserPrefs initPrefs(UserPrefsStorage storage) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        Path prefsFilePath \u003d storage.getUserPrefsFilePath();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Using prefs file : \" + prefsFilePath);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        UserPrefs initializedPrefs;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DataConversionException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"Using default user prefs\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            initializedPrefs \u003d new UserPrefs();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        //Update prefs file in case it was missing to begin with or there are new/unused fields"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(initializedPrefs);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        return initializedPrefs;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"Starting AddressBook \" + MainApp.VERSION);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.start(primaryStage);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveUserPrefs(model.getUserPrefs());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 2,
      "-": 183
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diarycommands/AddDiaryEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diarycommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarymain.DiaryObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class AddDiaryEntryCommand extends DiaryCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    DiaryObject myAddedObject;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public AddDiaryEntryCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        myAddedObject \u003d new DiaryObject(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public CommandResult executeCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        myReference.addEntry(myAddedObject);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        CommandResult addedResult \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                new CommandResult(\"ADDED \" + myAddedObject.toString(),false,false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return addedResult;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diarycommands/DeleteDiaryEntryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diarycommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarymain.DiaryObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class DeleteDiaryEntryCommand extends DiaryCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        int deleted;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param x"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public DeleteDiaryEntryCommand(int x) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        deleted \u003d x;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public CommandResult executeCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        DiaryObject deletedObject \u003d myReference.deleteEntry(deleted);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        CommandResult deletedResult \u003d"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                new CommandResult(\"DELETED \" + deletedObject.toString(),false,false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return deletedResult;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 32
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diarycommands/DiaryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diarycommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarymain.DiaryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public abstract class DiaryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    protected static DiaryList myReference;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param myList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "   public void setReference(DiaryList myList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "       myReference \u003d myList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "   }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public abstract CommandResult executeCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 35
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diarycommands/DiaryErrorCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diarycommands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarymain.DiaryObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class DiaryErrorCommand extends DiaryCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    Exception issue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param x"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public DiaryErrorCommand(Exception x) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        issue \u003d x;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public CommandResult executeCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        CommandResult deletedResult \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                new CommandResult(\"Error \" + issue,false,false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return deletedResult;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 31
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diaryexceptions/CommandNotFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diaryexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class CommandNotFoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public CommandNotFoundException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diarymain/DiaryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diarymain;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class DiaryList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    private LinkedList\u003cDiaryObject\u003e myContainer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public DiaryList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        myContainer \u003d new LinkedList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param x"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public DiaryObject addEntry(DiaryObject x) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        myContainer.add(x);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return x;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param x"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public DiaryObject deleteEntry(int x) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        DiaryObject deleted \u003d myContainer.remove(x-1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return deleted;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diarymain/DiaryObject.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diarymain;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class DiaryObject {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    String entry;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param y"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public DiaryObject(String y) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        entry \u003d y;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        return this.entry;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 23
    }
  },
  {
    "path": "src/main/java/seedu/address/diaryfeature/diaryparser/DiaryParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "package seedu.address.diaryfeature.diaryparser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarycommands.AddDiaryEntryCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarycommands.DeleteDiaryEntryCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diarycommands.DiaryErrorCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.diaryfeature.diaryexceptions.CommandNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "public class DiaryParser implements Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @param userInput"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    public Command parse(String userInput)  {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            String trimmed \u003d userInput.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            if (trimmed.startsWith(\"add entry\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                //Note that \"add entry\" counts as 9 characters, and hence the added task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                //only starts from pos 10"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                String entry \u003d trimmed.substring(10);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                return new AddDiaryEntryCommand(entry);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            } else if (trimmed.startsWith(\"delete Entry\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                //Note that \"delete Entry\" counts as 12 characters,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                //and hence, we start from pos 13"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                int deleteIndex \u003d Integer.parseInt(trimmed.substring(13));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                return new DeleteDiaryEntryCommand(deleteIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "                throw new CommandNotFoundException(\"No such command yet\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        catch (Exception x) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "            return new DiaryErrorCommand(x);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tishyakhanna97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tishyakhanna97": 40
    }
  },
  {
    "path": "src/main/java/seedu/address/financialtracker/commands/addFinCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "package seedu.address.financialtracker.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class addFinCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/financialtracker/commands/deleteFinCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "package seedu.address.financialtracker.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class deleteFinCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/financialtracker/commands/summaryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "package seedu.address.financialtracker.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "honhaochen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "public class summaryCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "honhaochen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "honhaochen": 4
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.util.CollectionUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Edits the details of an existing person in the address book."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"by the index number used in the displayed person list. \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Existing values will be overwritten by the input values.\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_NAME + \"NAME] \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_PHONE + \"PHONE] \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_EMAIL + \"EMAIL] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"[\" + PREFIX_TAG + \"TAG]...\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            + PREFIX_PHONE + \"91234567 \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            + PREFIX_EMAIL + \"johndoe@example.com\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private final EditPersonDescriptor editPersonDescriptor;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index of the person in the filtered person list to edit"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param editPersonDescriptor details to edit the person with"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(editPersonDescriptor);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        requireNonNull(model);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(MESSAGE_DUPLICATE_PERSON);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates and returns a {@code Person} with the details of {@code personToEdit}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * edited with {@code editPersonDescriptor}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assert personToEdit !\u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof EditCommand)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand e \u003d (EditCommand) other;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Stores the details to edit the person with. Each non-empty field value will replace the"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     * corresponding field value of the person."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EditPersonDescriptor {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        private Name name;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        private Phone phone;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        private Email email;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        private Address address;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        public EditPersonDescriptor() {}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "         * Copy constructor."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public EditPersonDescriptor(EditPersonDescriptor toCopy) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            setName(toCopy.name);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            setPhone(toCopy.phone);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            setEmail(toCopy.email);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            setAddress(toCopy.address);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            setTags(toCopy.tags);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns true if at least one field is edited."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean isAnyFieldEdited() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setName(Name name) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cName\u003e getName() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(name);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setPhone(Phone phone) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            this.phone \u003d phone;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cPhone\u003e getPhone() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(phone);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setEmail(Email email) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            this.email \u003d email;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cEmail\u003e getEmail() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(email);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setAddress(Address address) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            this.address \u003d address;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cAddress\u003e getAddress() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            return Optional.ofNullable(address);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "         * Sets {@code tags} to this object\u0027s {@code tags}."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "         * A defensive copy of {@code tags} is used internally."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        public void setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "         * if modification is attempted."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "         * Returns {@code Optional#empty()} if {@code tags} is null."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        public boolean equals(Object other) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            // short circuit if same object"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            // instanceof handles nulls"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!(other instanceof EditPersonDescriptor)) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            // state check"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            return getName().equals(e.getName())"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getPhone().equals(e.getPhone())"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getEmail().equals(e.getEmail())"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getAddress().equals(e.getAddress())"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 getTags().equals(e.getTags());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 225,
      "ngzhaoming": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " * Changes the remark of an existing person in the address book."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class RemarkCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"remark\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            + \"by the index number used in the last person listing. \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            + \"Existing remark will be overwritten by the input.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            + \"Parameters: INDEX (must be a positive integer) \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            + PREFIX_REMARK + \"[REMARK]\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            + \"Example: \" + COMMAND_WORD + \" 1 \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            + PREFIX_REMARK + \"Likes to swim.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private final Index index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private final Remark remark;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * @param index of the person in the filtered person list to edit the remark"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * @param remark of the person to be updated to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public RemarkCommand(Index index, Remark remark) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        requireAllNonNull(index, remark);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.remark \u003d remark;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public CommandResult execute(Model model) throws CommandException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person personToEdit \u003d lastShownList.get(index.getZeroBased());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                personToEdit.getAddress(), remark, personToEdit.getTags());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        model.setPerson(personToEdit, editedPerson);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return new CommandResult(generateSuccessMessage(editedPerson));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * Generates a command execution success message based on whether the remark is added to or removed from"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * {@code personToEdit}."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private String generateSuccessMessage(Person personToEdit) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return String.format(message, personToEdit);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        if (!(other instanceof RemarkCommand)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand e \u003d (RemarkCommand) other;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return index.equals(e.index)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \u0026\u0026 remark.equals(e.remark);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 91
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses input arguments and creates a new AddCommand object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the AddCommand"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * and returns an AddCommand object for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        ArgumentMultimap argMultimap \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                || !argMultimap.getPreamble().isEmpty()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person person \u003d new Person(name, phone, email, address, remark, tagList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return new AddCommand(person);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if none of the prefixes contains empty {@code Optional} values in the given"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code ArgumentMultimap}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 59,
      "ngzhaoming": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.calendar.commands.CalendarCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        case RemarkCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            return new RemarkCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        case CalendarCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            return new CalendarCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // todo: remove this when everyone has implemented the UI of their page"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        case SampleCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SampleCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 76,
      "ngzhaoming": 3
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Command Line Interface (CLI) syntax definitions common to multiple commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class CliSyntax {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Prefix definitions */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "ngzhaoming": 2
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.logic.commands.RemarkCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " * Parses input arguments and creates a new {@code RemarkCommand} object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * and returns a {@code RemarkCommand} object for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public RemarkCommand parse(String args) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        requireNonNull(args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Index index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return new RemarkCommand(index, new Remark(remark));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 37
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Person.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a Person in the address book."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Guarantees: details are present and not null, field values are validated, immutable."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Person {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Name name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Phone phone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Email email;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Address address;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private final Remark remark;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        requireAllNonNull(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.remark \u003d remark;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public Name getName() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public Phone getPhone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return phone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public Email getEmail() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return email;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public Address getAddress() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public Remark getRemark() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return remark;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * if modification is attempted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons of the same name have at least one other identity field that is the same."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a weaker notion of equality between two persons."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isSamePerson(Person otherPerson) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        if (otherPerson \u003d\u003d this) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson !\u003d null"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (otherPerson.getPhone().equals(getPhone()) || otherPerson.getEmail().equals(getEmail()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if both persons have the same identity and data fields."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * This defines a stronger notion of equality between two persons."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof Person)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        Person otherPerson \u003d (Person) other;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return otherPerson.getName().equals(getName())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getPhone().equals(getPhone())"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getEmail().equals(getEmail())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getAddress().equals(getAddress())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 otherPerson.getTags().equals(getTags());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        return Objects.hash(name, phone, email, address, tags);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        builder.append(getName())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Phone: \")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getPhone())"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Email: \")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getEmail())"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Address: \")"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(getAddress())"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                .append(\" Remark: \")"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                .append(getRemark())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                .append(\" Tags: \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 119,
      "ngzhaoming": 9
    }
  },
  {
    "path": "src/main/java/seedu/address/model/person/Remark.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " * Represents a Person\u0027s remark in the address book."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " * Guarantees: immutable; is always valid"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class Remark {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public final String value;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public Remark(String remark) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        requireNonNull(remark);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        value \u003d remark;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                || (other instanceof Remark // instanceof handles nulls"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                \u0026\u0026 value.equals(((Remark) other).value)); // state check"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return value.hashCode();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 33
    }
  },
  {
    "path": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.model.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains utility methods for populating {@code AddressBook} with sample data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class SampleDataUtil {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Person[] getSamplePersons() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Person[] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"friends\")),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"colleagues\", \"friends\")),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"neighbours\")),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"family\")),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"classmates\")),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                getTagSet(\"colleagues\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ReadOnlyAddressBook getSampleAddressBook() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook sampleAb \u003d new AddressBook();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person samplePerson : getSamplePersons()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            sampleAb.addPerson(samplePerson);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return sampleAb;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a tag set containing the list of strings given."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Set\u003cTag\u003e getTagSet(String... strings) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(strings)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(Tag::new)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toSet());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 54,
      "ngzhaoming": 10
    }
  },
  {
    "path": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonCreator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Jackson-friendly version of {@link Person}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "class JsonAdaptedPerson {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String phone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String email;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String address;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private final String remark;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a {@code JsonAdaptedPerson} with the given person details."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @JsonCreator"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            @JsonProperty(\"remark\") String remark, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d phone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d address;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.remark \u003d remark;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        if (tagged !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            this.tagged.addAll(tagged);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts a given {@code Person} into this class for Jackson use."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public JsonAdaptedPerson(Person source) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d source.getName().fullName;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d source.getPhone().value;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d source.getEmail().value;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d source.getAddress().value;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        remark \u003d source.getRemark().value;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        tagged.addAll(source.getTags().stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IllegalValueException if there were any data constraints violated in the adapted person."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person toModelType() throws IllegalValueException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        for (JsonAdaptedTag tag : tagged) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            personTags.add(tag.toModelType());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Name.isValidName(name)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        final Name modelName \u003d new Name(name);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Phone.isValidPhone(phone)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        final Phone modelPhone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        if (email \u003d\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Email.isValidEmail(email)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        final Email modelEmail \u003d new Email(email);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        if (address \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!Address.isValidAddress(address)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        final Address modelAddress \u003d new Address(address);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        if (remark \u003d\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        final Remark modelRemark \u003d new Remark(remark);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 107,
      "ngzhaoming": 11
    }
  },
  {
    "path": "src/main/java/seedu/address/ui/PersonCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.FlowPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * An UI component that displays information of a {@code Person}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonCard extends UiPart\u003cRegion\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FXML \u003d \"PersonListCard.fxml\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * or an exception will be thrown by JavaFX during runtime."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public final Person person;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label phone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label address;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label email;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private Label remark;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private FlowPane tags;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonCard(Person person, int displayedIndex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        name.setText(person.getName().fullName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        phone.setText(person.getPhone().value);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        address.setText(person.getAddress().value);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        email.setText(person.getEmail().value);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        remark.setText(person.getRemark().value);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        person.getTags().stream()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                .sorted(Comparator.comparing(tag -\u003e tag.tagName))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // short circuit if same object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // instanceof handles nulls"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof PersonCard)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        // state check"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        PersonCard card \u003d (PersonCard) other;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return id.getText().equals(card.id.getText())"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 person.equals(card.person);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 74,
      "ngzhaoming": 3
    }
  },
  {
    "path": "src/main/resources/view/PersonListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "ngzhaoming": 1
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/CommandTestUtil.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains helper methods for testing commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class CommandTestUtil {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_AMY \u003d \"11111111\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_PHONE_BOB \u003d \"22222222\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_HUSBAND \u003d \"husband\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String VALID_TAG_FRIEND \u003d \"friend\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_AMY;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final EditCommand.EditPersonDescriptor DESC_BOB;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the {@code actualModel} matches {@code expectedModel}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            CommandResult result \u003d command.execute(actualModel);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedCommandResult, result);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedModel, actualModel);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommandException ce) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Execution of command should not fail.\", ce);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * that takes a string {@code expectedMessage}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            Model expectedModel) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the given {@code command}, confirms that \u003cbr\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * - a {@code CommandException} is thrown \u003cbr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        // we are unable to defensively copy the model for comparison later, so we can"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        // only do so by copying its components."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedAddressBook, actualModel.getAddressBook());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code model}\u0027s address book."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void showPersonAtIndex(Model model, Index targetIndex) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, model.getFilteredPersonList().size());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 128,
      "ngzhaoming": 2
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package seedu.address.logic.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.core.Messages;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.ModelManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.UserPrefs;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class RemarkCommandTest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private static final String REMARK_STUB \u003d \"Some remark\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void execute_addRemarkUnfilteredList_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        expectedModel.setPerson(firstPerson, editedPerson);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void execute_deleteRemarkUnfilteredList_success() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Remark(editedPerson.getRemark().toString()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        expectedModel.setPerson(firstPerson, editedPerson);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void execute_filteredList_success() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                .withRemark(REMARK_STUB).build();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        expectedModel.setPerson(firstPerson, editedPerson);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void execute_invalidPersonIndexUnfilteredList_failure() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * Edit filtered list where index is larger than size of filtered list,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * but smaller than size of address book"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void execute_invalidPersonIndexFilteredList_failure() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        showPersonAtIndex(model, INDEX_FIRST_PERSON);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // ensures that outOfBoundIndex is still in bounds of address book list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Remark(VALID_REMARK_AMY));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Remark(VALID_REMARK_AMY));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertTrue(standardCommand.equals(commandWithSameValues));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertTrue(standardCommand.equals(standardCommand));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(standardCommand.equals(null));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(standardCommand.equals(new ClearCommand()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // different index -\u003e returns false"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Remark(VALID_REMARK_AMY))));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // different remark -\u003e returns false"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new Remark(VALID_REMARK_BOB))));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 136
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddressBookParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.HelpCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.logic.commands.RemarkCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonUtil;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParserTest {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser parser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(person), command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_help() throws Exception {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void parseCommand_remark() throws Exception {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        final Remark remark \u003d new Remark(\"Some remark.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e parser.parseCommand(\"\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "ngzhaoming": 11
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.commons.core.index.Index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.logic.commands.RemarkCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class RemarkCommandParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private RemarkCommandParser parser \u003d new RemarkCommandParser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private final String nonEmptyRemark \u003d \"Some remark.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void parse_indexSpecified_success() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // have remark"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Index targetIndex \u003d INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // no remark"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertParseSuccess(parser, userInput, expectedCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void parse_missingCompulsoryField_failure() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // no parameters"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // no index"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 43
    }
  },
  {
    "path": "src/test/java/seedu/address/model/person/RemarkTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "package seedu.address.model.person;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "public class RemarkTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public void equals() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Remark remark \u003d new Remark(\"Hello\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // same object -\u003e returns true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertTrue(remark.equals(remark));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // same values -\u003e returns true"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Remark remarkCopy \u003d new Remark(remark.value);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertTrue(remark.equals(remarkCopy));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // different types -\u003e returns false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(remark.equals(1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // null -\u003e returns false"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(remark.equals(null));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        // different remark -\u003e returns false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        Remark differentRemark \u003d new Remark(\"Bye\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        assertFalse(remark.equals(differentRemark));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhaoming": 31
    }
  },
  {
    "path": "src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalPersons.BENSON;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class JsonAdaptedPersonTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_NAME \u003d \"R@chel\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_PHONE \u003d \"+651234\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_ADDRESS \u003d \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_EMAIL \u003d \"example.com\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String INVALID_TAG \u003d \"#friend\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_NAME \u003d BENSON.getName().toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            .map(JsonAdaptedTag::new)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_validPersonDetails_returnsPerson() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(BENSON, person.toModelType());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullName_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidPhone_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullPhone_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidEmail_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullEmail_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidAddress_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_nullAddress_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK, VALID_TAGS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    public void toModelType_invalidTags_throwsIllegalValueException() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonAdaptedPerson person \u003d"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(IllegalValueException.class, person::toModelType);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "ngzhaoming": 14
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Address;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Email;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Phone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "import seedu.address.model.person.Remark;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.util.SampleDataUtil;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class to help with building Person objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class PersonBuilder {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_PHONE \u003d \"85355255\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_EMAIL \u003d \"alice@gmail.com\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public static final String DEFAULT_REMARK \u003d \"She likes aardvarks.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Name name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private Phone phone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private Email email;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private Address address;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    private Remark remark;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cTag\u003e tags;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d new Name(DEFAULT_NAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d new Phone(DEFAULT_PHONE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d new Email(DEFAULT_EMAIL);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d new Address(DEFAULT_ADDRESS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        remark \u003d new Remark(DEFAULT_REMARK);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes the PersonBuilder with the data of {@code personToCopy}."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder(Person personToCopy) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        name \u003d personToCopy.getName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        phone \u003d personToCopy.getPhone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d personToCopy.getEmail();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        address \u003d personToCopy.getAddress();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        remark \u003d personToCopy.getRemark();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Name} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withName(String name) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d new Name(name);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withTags(String ... tags) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tags \u003d SampleDataUtil.getTagSet(tags);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Address} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withAddress(String address) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.address \u003d new Address(address);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Phone} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withPhone(String phone) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phone \u003d new Phone(phone);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the {@code Email} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public PersonBuilder withEmail(String email) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        this.email \u003d new Email(email);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     * Sets the {@code Remark} of the {@code Person} that we are building."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    public PersonBuilder withRemark(String remark) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        this.remark \u003d new Remark(remark);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public Person build() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "        return new Person(name, phone, email, address, remark, tags);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 92,
      "ngzhaoming": 16
    }
  },
  {
    "path": "src/test/java/seedu/address/testutil/TypicalPersons.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.testutil;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.AddressBook;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * A utility class containing a list of {@code Person} objects to be used in tests."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class TypicalPersons {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"friends\").build();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhaoming"
        },
        "content": "            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            .withTags(\"owesMoney\", \"friends\").build();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Manually added - Person\u0027s details found in {@code CommandTestUtil}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            .build();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private TypicalPersons() {} // prevents instantiation"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an {@code AddressBook} with all the typical persons."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public static AddressBook getTypicalAddressBook() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        AddressBook ab \u003d new AddressBook();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Person person : getTypicalPersons()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            ab.addPerson(person);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        return ab;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cPerson\u003e getTypicalPersons() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 74,
      "ngzhaoming": 2
    }
  }
]
