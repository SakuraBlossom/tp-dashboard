[
  {
    "path": "README.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d ELISA"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github,env-browser[:relfileprefix: docs/]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "https://travis-ci.org/AY1920S1-CS2103T-T10-3/main[image:https://travis-ci.org/AY1920S1-CS2103T-T10-3/main.svg?branch\u003dmaster[Build Status]]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "image::docs/images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifndef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "image::images/Ui.png[width\u003d\"600\"]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Extremely Loud and Intelligent Student Assistant (ELISA) is for students who *want to have an intelligent companion that keeps track of tasks and give friendly reminders on when to take breaks*."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* More importantly, ELISA is *optimized for those who prefer to work with a Command Line Interface* (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ELISA can get your tasks done faster than traditional GUI apps."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "* It is a Java sample application intended for students learning Software Engineering while using Java as the main programming language."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* It is *written in OOP fashion*. It provides a *reasonably well-written* code example that is *significantly bigger* (around 6 KLoC)than what students usually write in beginner-level SE modules."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Interested? Jump to the \u003c\u003cQuick Start\u003e\u003e to get started. Enjoy!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Site Map"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cUserGuide#, User Guide\u003e\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDeveloperGuide#, Developer Guide\u003e\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cLearningOutcomes#, Learning Outcomes\u003e\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cAboutUs#, About Us\u003e\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cContactUs#, Contact Us\u003e\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Acknowledgements"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Built on AddressBook-Level3 project created by SE-EDU initiative at https://se-education.org"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "* Some parts of this sample application were inspired by the excellent http://code.makery.ch/library/javafx-8-tutorial/[Java FX tutorial] by"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "_Marco Jakob_."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* Libraries used: https://openjfx.io/[JavaFX], https://github.com/FasterXML/jackson[Jackson], https://github.com/junit-team/junit5[JUnit5]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Licence : link:LICENSE[MIT]"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 1,
      "mannggoo": 4,
      "-": 30
    }
  },
  {
    "path": "docs/AboutUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d About Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: AboutUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":relfileprefix: team/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "ELISA _(Exceptionally Loud and Intelligent Student Assistant)_ - Was developed by the https://github.com/AY1920S1-CS2103T-T10-3[T10-3] team. +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "ELISA is a student assistant made for college students who need constant reminders to complete their daily tasks. More importantly, ELISA is optimized for those who prefer to work with a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{empty} +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "We are a student team based in the http://www.comp.nus.edu.sg[School of Computing, National University of Singapore]."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Project Team"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Bryan Lim"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "image::blimyj.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "{empty}[http://github.com/blimyj[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Responsibilities: Commons"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Hema"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "image::lrchema.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "{empty}[http://github.com/lrchema[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Responsibilities: Functionality"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Lim Yu Hui"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "image::mannggoo.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "{empty}[http://github.com/mannggoo[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Responsibilities: Logic"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Low Cheng Yi"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "image::Icesiolz.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "{empty}[http://github.com/Icesiolz[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Responsibilities: UI"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Ng Siang Hwee"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "image::sianghwee.png[width\u003d\"150\", align\u003d\"left\"]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "{empty}[http://github.com/sianghwee[github]] [\u003c\u003cjohndoe#, portfolio\u003e\u003e]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Role: Developer +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Responsibilities: Model"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027\u0027\u0027"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 21,
      "-": 35
    }
  },
  {
    "path": "docs/ContactUs.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d Contact Us"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: ContactUs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* *Bug reports, Suggestions* : Post in our https://github.com/AY1920S1-CS2103T-T10-3/main/issues[issue tracker] if you noticed bugs or have suggestions on how to improve."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* *Contributing* : We welcome pull requests. Follow the process described https://github.com/oss-generic/process[here]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* *Email us* : You can also reach us at `holmescordelia8 [at] gmail.com`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mannggoo": 3,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "\u003d ELISA - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: DeveloperGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":warning-caption: :warning:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ":repoURL: https://github.com/se-edu/addressbook-level3/tree/master"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "By: `AY1920S1-CS2103T-T10-3`      Since: `Sep 2019`      Licence: `MIT`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cSettingUp#, here\u003e\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Design"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Architecture]]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Architecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".Architecture Diagram"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureDiagram.png[]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "The *_Architecture Diagram_* given above explains the high-level design of the App. Given below is a quick overview of each component."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "The `.puml` files used to create diagrams in this document can be found in the link:{repoURL}/docs/diagrams/[diagrams] folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the \u003c\u003cUsingPlantUml#, Using PlantUML guide\u003e\u003e to learn how to create and edit diagrams."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "`Main` has two classes called link:{repoURL}/src/main/java/seedu/address/Main.java[`Main`] and link:{repoURL}/src/main/java/seedu/address/MainApp.java[`MainApp`]. It is responsible for,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* At app launch: Initializes the components in the correct sequence, and connects them up with each other."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* At shut down: Shuts down the components and invokes cleanup method where necessary."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c\u003cDesign-Commons,*`Commons`*\u003e\u003e represents a collection of classes used by multiple other components."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "The following class plays an important role at the architecture level:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "* `LogsCenter` : Used by many classes to write log messages to the App\u0027s log file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "The rest of the App consists of four components."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Ui,*`UI`*\u003e\u003e: The UI of the App."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Logic,*`Logic`*\u003e\u003e: The command executor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Model,*`Model`*\u003e\u003e: Holds the data of the App in-memory."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* \u003c\u003cDesign-Storage,*`Storage`*\u003e\u003e: Reads data from, and writes data to, the hard disk."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Each of the four components"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "* Defines its _API_ in an `interface` with the same name as the Component."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "* Exposes its functionality using a `{Component Name}Manager` class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "For example, the `Logic` component (see the class diagram given below) defines it\u0027s API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".Class Diagram of the Logic Component"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d How the architecture components interact with each other"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ".Component interactions for `delete 1` command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "image::ArchitectureSequenceDiagram.png[]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The sections below give more details of each component."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Ui]]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d UI component"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the UI Component"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "image::UiClassDiagram.png[]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/ui/Ui.java[`Ui.java`]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the link:{repoURL}/src/main/java/seedu/address/ui/MainWindow.java[`MainWindow`] is specified in link:{repoURL}/src/main/resources/view/MainWindow.fxml[`MainWindow.fxml`]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "The `UI` component,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "* Executes user commands using the `Logic` component."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Listens for changes to `Model` data so that the UI can be updated with the modified data."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Logic]]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logic component"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "[[fig-LogicClassDiagram]]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Logic Component"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "image::LogicClassDiagram.png[]"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "*API* :"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "link:{repoURL}/src/main/java/seedu/address/logic/Logic.java[`Logic.java`]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ".  `Logic` uses the `AddressBookParser` class to parse the user command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ".  This results in a `Command` object which is executed by the `LogicManager`."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ".  The command execution can affect the `Model` (e.g. adding a person)."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ".  The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ".  In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ".Interactions Inside the Logic Component for the `delete 1` Command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "image::DeleteSequenceDiagram.png[]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Model]]"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Model component"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Model Component"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "image::ModelClassDiagram.png[]"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/model/Model.java[`Model.java`]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "The `Model`,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "* stores a `UserPref` object that represents the user\u0027s preferences."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "* stores the Address Book data."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "* does not depend on any of the other three components."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "As a more OOP model, we can store a `Tag` list in `Address Book`, which `Person` can reference. This would allow `Address Book` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object. An example of how such a model may look like is given below. +"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": " +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "image:BetterModelClassDiagram.png[]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Storage]]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Storage component"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ".Structure of the Storage Component"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "image::StorageClassDiagram.png[]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "*API* : link:{repoURL}/src/main/java/seedu/address/storage/Storage.java[`Storage.java`]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "The `Storage` component,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* can save `UserPref` objects in json format and read it back."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "* can save the Address Book data in json format and read it back."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "[[Design-Commons]]"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Common classes"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "Classes used by multiple components are in the `seedu.addressbook.commons` package."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Implementation"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "This section describes some noteworthy details on how certain features are implemented."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::undoredo[]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Undo/Redo feature"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Proposed Implementation"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "The undo/redo mechanism is facilitated by `VersionedAddressBook`."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "Additionally, it implements the following operations:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#commit()` -- Saves the current address book state in its history."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#undo()` -- Restores the previous address book state from its history."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* `VersionedAddressBook#redo()` -- Restores a previously undone address book state from its history."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState0.png[]"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState1.png[]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "Step 3. The user executes `add n/David ...` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState2.png[]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState3.png[]"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index 0, pointing to the initial address book state, then there are no previous address book states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the undo."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "The following sequence diagram shows how the undo operation works:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoSequenceDiagram.png[]"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "NOTE: The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "The `redo` command does the opposite -- it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone address book states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState4.png[]"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. We designed it this way because it no longer makes sense to redo the `add n/David ...` command. This is the behavior that most modern desktop applications follow."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "image::UndoRedoState5.png[]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "The following activity diagram summarizes what happens when a user executes a new command:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "image::CommitActivityDiagram.png[]"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d Design Considerations"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: How undo \u0026 redo executes"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Saves the entire address book."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy to implement."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: May have performance issues in terms of memory usage."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Individual command knows how to undo/redo by itself."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: We must ensure that the implementation of each individual command are correct."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d Aspect: Data structure to support the undo/redo commands"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 1 (current choice):** Use a list to store the history of address book states."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: Easy for new Computer Science student undergraduates to understand, who are likely to be the new incoming developers of our project."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Logic is duplicated twice. For example, when a new command is executed, we must remember to update both `HistoryManager` and `VersionedAddressBook`."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "* **Alternative 2:** Use `HistoryManager` for undo/redo"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "** Pros: We do not need to maintain a separate list, and just reuse what is already in the codebase."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "** Cons: Requires dealing with commands that have already been undone: We must remember to skip these commands. Violates Single Responsibility Principle and Separation of Concerns as `HistoryManager` now needs to do two different things."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "// end::undoredo[]"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d [Proposed] Data Encryption"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "_{Explain here how the data encryption feature will be implemented}_"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Logging"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "We are using `java.util.logging` package for logging. The `LogsCenter` class is used to manage the logging levels and logging destinations."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "* The logging level can be controlled using the `logLevel` setting in the configuration file (See \u003c\u003cImplementation-Configuration\u003e\u003e)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "* Currently log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "*Logging Levels*"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "* `SEVERE` : Critical problem detected which may possibly cause the termination of the application"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* `WARNING` : Can continue, but with caution"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "* `INFO` : Information showing the noteworthy actions by the App"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "* `FINE` : Details that is not usually noteworthy but may be useful in debugging e.g. print the actual list instead of just its size"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "[[Implementation-Configuration]]"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Configuration"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Certain properties of the application can be controlled (e.g user prefs file location, logging level) through the configuration file (default: `config.json`)."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Documentation"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDocumentation#, here\u003e\u003e."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Testing"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cTesting#, here\u003e\u003e."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Dev Ops"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Refer to the guide \u003c\u003cDevOps#, here\u003e\u003e."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Scope"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "*Target user profile*:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* has a need to manage a large number of tasks"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* needs reminders to take breaks or move on to finish all their work"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* prefers to be more organized with their time and tasks"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* prefer desktop apps over other types of apps"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "* prefers typing over mouse input"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* can type fast"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "* is reasonably comfortable using CLI apps"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "*Value proposition*: manage time and tasks more efficiently than a typical mouse/GUI driven app"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d User Stories"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "Priorities: High (must have) - `* * \\*`, Medium (nice to have) - `* \\*`, Low (unlikely to have) - `*`"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "[width\u003d\"59%\",cols\u003d\"22%,\u003c23%,\u003c25%,\u003c30%\",options\u003d\"header\",]"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "|Priority |As a ... |I want to ... |So that I can..."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "|`* * *` |user |add a new task |"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "|`* * *` |user |mark a task as done | keep track of my remaining tasks"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "|`* * *` |user |delete a task |remove tasks that I no longer need"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "|`* * *` |user |find a task by description |find only the tasks that are relevant to me at that point in time"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "|`* *` |busy student |see my reminders as notifications|be reminded of them even in other applications"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "|`* *` |user with many tasks |sort tasks by priority |identify which tasks require my immediate attention"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "|\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Use Cases"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "(For all use cases below, the *System* is `ELISA` and the *Actor* is the `user`, unless specified otherwise)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "\u003d\u003d\u003d Use Case 001: Marking a task as done"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "1. User enters the command to show the task list."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "2. ELISA shows the task list to the user."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "3. User marks the task as done by using the index of the task."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "4. ELISA updates the task list."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "5. ELISA shows the updated task list to the user."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "[none]"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* 2a. The task list is empty."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "** 3a1. ELISA shows an error message."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "\u003d\u003d\u003d Use Case 002: Adding a task"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "1. User creates a new task with a description."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "2. ELISA informs the user that the task has been added."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* 1a. User can add deadline."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "** 1a1. ELISA informs the user that a deadline has been added to that task."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* 1b. User can add a reminder date."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "** 1b1. ELISA informs the user that a reminder has been added to that task."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case ends"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* 1c. User enters an empty description."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "** 1c1. ELISA informs the user that the description cannot be empty."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "** 1c2. User enters a non-empty description"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case resumes at step 2"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* a. At any time, User can view the task from the task list or the calendar view."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* b. At any time, User can add a deadline to the task"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* c. At any time, User can add a reminder to the task"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "\u003d\u003d\u003d Use Case 003: Deleting a task"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "1. User enters the command to show the task list."
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "2. ELISA shows the task list."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "3. User request to delete a task based on its index."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "4. ELISA deletes the task from the task list."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "5. ELISA shows the updated task list."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "*Extensions*"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* 2a. The task list is empty."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "Use case ends."
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "* 3a. The given index is invalid."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "+"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "** 3a1. ELISA shows an error message."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "Use case resumes at step 2."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "[discrete]"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "\u003d\u003d\u003d Use Case 004: Find upcoming reminders."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "*MSS*"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "1. User enters the command to show the reminder list."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "2. ELISA shows the reminder list."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "3. User enters command to sort reminders by date and time."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "4. ELISA shows the updated list of reminders sorted by date and time."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Non Functional Requirements"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should work on any \u003c\u003cmainstream-os,mainstream OS\u003e\u003e as long as it has Java `11` or above installed."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ".  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage."
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ".  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "_{More to be added}_"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Glossary"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "[[mainstream-os]] Mainstream OS::"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "Windows, Linux, Unix, OS-X"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "[[private-contact-detail]] Private contact detail::"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "A contact detail that is not meant to be shared with others"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Product Survey"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "*Product Name*"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ..."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "Pros:"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "Cons:"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "* ..."
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "[appendix]"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Instructions for Manual Testing"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "Given below are instructions to test the app manually."
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "[NOTE]"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing."
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Launch and Shutdown"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ". Initial launch"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ".. Download the jar file and copy into an empty folder"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ".. Double-click the jar file +"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ". Saving window preferences"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ".. Resize the window to an optimum size. Move the window to a different location. Close the window."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ".. Re-launch the app by double-clicking the jar file. +"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: The most recent window size and location is retained."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Deleting a person"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ". Deleting a person while all persons are listed"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ".. Prerequisites: List all persons using the `list` command. Multiple persons in the list."
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 1` +"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": ".. Test case: `delete 0` +"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ".. Other incorrect delete commands to try: `delete`, `delete x` (where x is larger than the list size) _{give more}_ +"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "   Expected: Similar to previous."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving data"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ". Dealing with missing/corrupted data files"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ".. _{explain how to simulate a missing/corrupted file and the expected behavior}_"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "_{ more test cases ... }_"
      }
    ],
    "authorContributionMap": {
      "blimyj": 4,
      "sianghwee": 90,
      "-": 403
    }
  },
  {
    "path": "docs/UserGuide.adoc",
    "fileType": "docs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003d ELISA - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ":site-section: UserGuide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ":toc:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-title:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ":toc-placement: preamble"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ":sectnums:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ":imagesDir: images"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ":stylesDir: stylesheets"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ":xrefstyle: full"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ":experimental:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "ifdef::env-github[]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ":tip-caption: :bulb:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ":note-caption: :information_source:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "endif::[]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": ":repoURL: https://github.com/ay1920s1-cs2103t-t10-3/main"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "By: `AY1920S1-CS2103T-T10-3`      Since: `Sep 2019`      Licence: `NUS`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Introduction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "Extremely Loud and Intelligent Student Assistant (ELISA) is for students who *wants to have an intelligent companion that keeps track of tasks and give friendly reminders on when to take breaks*. More importantly, ELISA is *optimized for those who prefer to work with a Command Line Interface* (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ELISA can get your tasks done faster than traditional GUI apps. Interested? Jump to the \u003c\u003cQuick Start\u003e\u003e to get started. Enjoy!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Quick Start"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ".  Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": ".  Download the latest `elisa.jar` link:{repoURL}/releases[here]."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": ".  Copy the file to the folder you want to use as the home folder for ELISA."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".  Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "image::Ui.png[width\u003d\"790\"]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ".  Type the command in the command box and press kbd:[Enter] to execute it. +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "e.g. typing *`help`* and pressing kbd:[Enter] will open the help window."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ".  Some example commands you can try:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "* *`list`* : lists all tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "* **`delete`**`3` : deletes the 3rd item shown in the current list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* *`exit`* : exits the app"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ".  Refer to \u003c\u003cFeatures\u003e\u003e for details of each command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "[[Features]]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d Features"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "*Command Format*"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Words in UPPER_CASE are the parameters to be supplied by the user e.g. in add -td, DESCRIPTION is a parameter which can be used as add -td bathe."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Items in square brackets are optional e.g -td DESCRIPTION [-t TAG] can be used as -td bath -t home or as -t bathe."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Items with …​ after them can be used multiple times including zero times e.g. [-t TAG]…​ can be used as   (i.e. 0 times), -t friend, -t friend -t family etc."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Parameters can be in any order e.g. if the command specifies  -td DESCRIPTION -t TAG, -t TAG -td DESCRIPTION is also acceptable."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Viewing help : `help`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Adding a task: `task`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Adds a task to the task list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Format: `task DESCRIPTION [-d DATETIME] [-r REMINDER] [-p PRIORITY] [-t TAG]...`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "A task can have any number of tags (including 0)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `task eat my vitamins`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `task eat my vitamins -r at 2pm`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `task eat my vitamins -d by midnight -p low -t healthy`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Adding an event: `event`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Adds an event to events list and calendar"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Format: `event DESCRIPTION -d DATETIME [-r REMINDER] [-p PRIORITY] [-t TAG]...`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "An event can have any number of tags (including 0)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* `event John’s Birthday -d 20/09/2019`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* `event John’s Birthday -d 20/09/2019 -r at 2pm`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blimyj"
        },
        "content": "* `event John’s Birthday -d 20/09/2019 -p high -t friend`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Adding a reminder: `reminder`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Adds a reminder to the reminder list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Format: `reminder DESCRIPTION -d DATETIME [-p PRIORITY] [-t TAG]...`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[TIP]"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "A reminder can have any number of tags (including 0)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `reminder John’s Birthday -r 19/09/2019 14:00`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `reminder John’s Birthday -r 19/09/2019  14:00 -p high -t friend`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Show the specified category : `show`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Shows the specified category. For example show -t will show the tasks list and show -e will show the events list. The view will be toggled between the respective pages."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Format: `show [-t] [-e] [-c] [-r] (at least one and only one flag must be used with this command)\u0027\u0027"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `show -t`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `show -e`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `show -r`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `show -c`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Editing an item : `edit`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "This command is used to edit any of the items that you might have. However, you are only able to edit the item when the list is currently in view. For example, you are able to edit a task when the current view is that of the task list as index is used to reference the item. However, you are not able to edit a task for the event list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "+"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Format: `edit INDEX [-td DESCRIPTION] [-ed DESCRIPTION] [-rd DESCRIPTION] [-d DATETIME] [-r REMINDER] [-p PRIORITY] [-t TAG]...`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Edits the task at the specified `INDEX`. The index refers to the index number shown in currently viewed list. The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* At least one of the optional fields must be provided."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* Existing values will be updated to the input values."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* When editing tags, the existing tags of the item will be removed i.e adding of tags is not cumulative."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* You can remove all the item\u0027s tags by typing `t/` without specifying any tags after it."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `edit 1 -td read books -d by tmr` +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Edits the task description and deadline of the 1st task to be `read books` and `by tmr` respectively."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `edit 3 -ed CS2103 team meeting -p high` +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Edits the event description and the priority of the 2nd event to be `CS2103 team meeting` and `high` respectively."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::delete[]"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003d\u003d\u003d Deleting a reminder/task/event : `delete`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Deletes the reminder/task/event from the ELISA. +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "* Deletes the person at the specified `INDEX`."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* The index refers to the index number shown in the list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "* The index *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "****"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "* `show -r` +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "`delete 2` +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Deletes the 2nd reminder in the shown reminder list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "// end::delete[]"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lrchema"
        },
        "content": "// tag::undo[]"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lrchema"
        },
        "content": "\u003d\u003d\u003d Undoing the latest command(s) : `undo`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Reverts the latest commands given on the ELISA. +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Format: `undo [number of commands]`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lrchema"
        },
        "content": "****"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lrchema"
        },
        "content": "* Omitting the number reverts the last one command"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lrchema"
        },
        "content": "* The number of commands must be *at most 20*"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lrchema"
        },
        "content": "* The number *must be a positive integer* 1, 2, 3, ..."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lrchema"
        },
        "content": "****"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lrchema"
        },
        "content": "* `undo` +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Undoes the last command"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lrchema"
        },
        "content": "* `undo 2` +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lrchema"
        },
        "content": "Undoes the last 2 commands"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lrchema"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lrchema"
        },
        "content": "// end::undo[]"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Exiting the program : `exit`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "Exits the program. +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Saving the data"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "ELISA saves the data in the hard disk automatically after any command that changes the data."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "// tag::dataencryption[]"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "\u003d\u003d\u003d Encrypting data files `[coming in v2.0]`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "_{explain how the user can enable/disable data encryption}_"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "// end::dataencryption[]"
      }
    ],
    "authorContributionMap": {
      "blimyj": 3,
      "lrchema": 20,
      "mannggoo": 59,
      "-": 96,
      "Icesiolz": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/Messages.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.commons.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "Icesiolz": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/item/Event.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blimyj"
        },
        "content": "package seedu.address.commons.core.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blimyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Represents an Item\u0027s Event in ELISA."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Duration of Event is 0 by default."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Priority of Event is medium by default."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Guarantees: immutable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blimyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blimyj"
        },
        "content": "public class Event {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final LocalDateTime startDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final LocalDateTime endDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    //Duration chosen over Period as Events are unlikely to exceed a day."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Duration duration;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Priority priority;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Constructs an {@code Event}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param startDateTime A valid LocalDateTime object that denotes the start of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param duration A Duration of the event. Defaults to Duration.ZERO if null."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param priority A Priority of the event. Defaults to Priority.MEDIUM if null."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Event(LocalDateTime startDateTime, Duration duration, Priority priority) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        requireNonNull(startDateTime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (duration !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.duration \u003d duration;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.duration \u003d Duration.ZERO;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (priority !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.priority \u003d priority;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.endDateTime \u003d startDateTime.plus(duration);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public LocalDateTime getStartDateTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return startDateTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public LocalDateTime getEndDateTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return endDateTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Duration getDuration() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Event changeStartDateTime(LocalDateTime newStartDateTime) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new Event(newStartDateTime, getDuration(), getPriority());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Event changeDuration(Duration newDuration) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new Event(getStartDateTime(), newDuration, getPriority());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Event changePriority(Priority newPriority) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new Event(getStartDateTime(), getDuration(), newPriority);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        builder.append(\"Start DateTime: \")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getStartDateTime().toString())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" End DateTime: \")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getEndDateTime().toString())"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Duration: \")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getDuration().toString())"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Priority: \")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getPriority().toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (!(other instanceof Item)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        Event otherEvent \u003d (Event) other;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return otherEvent.getStartDateTime().equals(getStartDateTime())"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherEvent.getEndDateTime().equals(getEndDateTime())"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherEvent.getDuration().equals(getDuration())"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherEvent.getPriority().equals(getPriority());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return Objects.hash(startDateTime, endDateTime, duration, priority);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "blimyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 112
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/item/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blimyj"
        },
        "content": "package seedu.address.commons.core.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import seedu.address.model.tag.Tag;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blimyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Represents an Item in Elisa."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Guarantees: ItemDescription is present and not null."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * At least one of the following three fields (Task, Event, Reminder) is present and not null."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blimyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blimyj"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    // Identity fields"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Event event;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Reminder reminder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    // Data fields"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final ItemDescription itemDescription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Every field must be present and not null."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private Item(Task task, Event event, Reminder reminder,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                 ItemDescription itemDescription, Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        requireNonNull(itemDescription);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.itemDescription \u003d itemDescription;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.tags.addAll(tags);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean hasTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return task !\u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean hasEvent() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return event !\u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean hasReminder() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return reminder !\u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Optional\u003cTask\u003e getTask() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (this.task \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return Optional.of(this.task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Optional\u003cEvent\u003e getEvent() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (this.event \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return Optional.of(this.event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Optional\u003cReminder\u003e getReminder() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (this.reminder \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return Optional.of(this.reminder);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * if modification is attempted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Set\u003cTag\u003e getTags() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return Collections.unmodifiableSet(tags);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public ItemDescription getItemDescription() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return itemDescription;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Change ItemDescription"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Item changeItemDescription(ItemDescription newItemDescription) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new ItemBuilder().setItemDescription(newItemDescription)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTask(task)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setEvent(event)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setReminder(reminder)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Change Task referenced"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Item changeTask(Task newTask) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new ItemBuilder().setItemDescription(itemDescription)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTask(newTask)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setEvent(event)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setReminder(reminder)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Change Event referenced"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Item changeEvent(Event newEvent) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new ItemBuilder().setItemDescription(itemDescription)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTask(task)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setEvent(newEvent)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setReminder(reminder)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Change Reminder referenced"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Item changeReminder(Reminder newReminder) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new ItemBuilder().setItemDescription(itemDescription)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTask(task)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setEvent(event)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setReminder(newReminder)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTags(tags)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Change Tags referenced"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Item changeTags(HashSet\u003cTag\u003e newTags) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new ItemBuilder().setItemDescription(itemDescription)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTask(task)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setEvent(event)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setReminder(reminder)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .setTags(newTags)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Returns true if both items have the same task referenced."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * This defines a weaker notion of equality between two items."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean hasSameTask(Item otherItem) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return getTask().equals(otherItem.getTask());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Returns true if both items have the same Event referenced."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * This defines a weaker notion of equality between two items."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean hasSameEvent(Item otherItem) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return getEvent().equals(otherItem.getEvent());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Returns true if both items have the same Reminder referenced."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * This defines a weaker notion of equality between two items."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean hasSameReminder(Item otherItem) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return getReminder().equals(otherItem.getReminder());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Returns true if both items have the same identity and data fields."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * This defines a stronger notion of equality between two items."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (!(other instanceof Item)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        Item otherItem \u003d (Item) other;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return otherItem.getTask().equals(getTask())"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherItem.getReminder().equals(getReminder())"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherItem.getEvent().equals(getEvent())"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherItem.getItemDescription().equals(getItemDescription())"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherItem.getTags().equals(getTags());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        // use this method for custom fields hashing instead of implementing your own"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return Objects.hash(task, event, reminder, itemDescription, tags);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        builder.append(\"Description: \")"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(itemDescription.toString())"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Task: \")"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getTask().toString())"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Event: \")"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getEvent().toString())"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Reminder: \")"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getReminder().toString())"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Tags: \")"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getTags().toString());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        getTags().forEach(builder::append);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Builder class for Item."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public static class ItemBuilder {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        // Identity fields"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        private Task task;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        private Event event;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        private Reminder reminder;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        // Data fields"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        private ItemDescription itemDescription;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public ItemBuilder() {}"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public ItemBuilder setTask(Task task) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            requireNonNull(task);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public ItemBuilder setEvent(Event event) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            requireNonNull(event);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.event \u003d event;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public ItemBuilder setReminder(Reminder reminder) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            requireNonNull(reminder);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public ItemBuilder setItemDescription(ItemDescription descriptor) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            requireNonNull(descriptor);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.itemDescription \u003d descriptor;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        //Consider using a defensive copy of tags, similar to EditCommand in AB3"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public ItemBuilder setTags(Set\u003cTag\u003e tags) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            requireNonNull(tags);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.tags \u003d tags;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        /**Validates arguments of Item before initialising it"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "blimyj"
        },
        "content": "         *"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "blimyj"
        },
        "content": "         * @return A valid Item."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "blimyj"
        },
        "content": "         * @throws IllegalArgumentException If description not provided or task, event and reminder fields are null."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "blimyj"
        },
        "content": "         */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        public Item build() throws IllegalArgumentException {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            Item newItem \u003d new Item(this.task, this.event, this.reminder, this.itemDescription, this.tags);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //Validation of parameters of object after object has been created."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //Validate after object has been created as per StackOverflow link"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //https://stackoverflow.com/questions/38173274/builder-pattern-validation-effective-java"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //However this seems to be contrary to the answer in the following link"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //https://stackoverflow.com/questions/12930852/clearing-doubts-about-the-builder-pattern"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //However it seems safer to follow the first as the object fields could be mutated after it has been copied"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            // from the builder to the object."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            if (newItem.getItemDescription() \u003d\u003d null) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                throw new IllegalArgumentException(\"Description must be provided!\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            if (newItem.getTask() \u003d\u003d null \u0026\u0026 newItem.getEvent() \u003d\u003d null \u0026\u0026 newItem.getReminder() \u003d\u003d null) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                throw new IllegalArgumentException(\"Task, Event \u0026 Reminder cannot all be empty!\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            //Resetting all constructing parameters back to null, so a new object doesn\u0027t use the parameters of the"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            // previous object."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            task \u003d null;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            event \u003d null;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            reminder \u003d null;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            itemDescription \u003d null;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            tags \u003d null;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return newItem;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "blimyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 299
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/item/ItemDescription.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blimyj"
        },
        "content": "package seedu.address.commons.core.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import static seedu.address.commons.util.AppUtil.checkArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blimyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Represents an Item\u0027s description in ELISA."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Guarantees: immutable; is valid as declared in {@link #isValidItemDescription(String)}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blimyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blimyj"
        },
        "content": "public class ItemDescription {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public static final String MESSAGE_CONSTRAINTS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        \"ItemDescription should only contain characters and spaces, and it should not be blank\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Constructs an {@code ItemDescription}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param description A valid item description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public ItemDescription(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        requireNonNull(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        checkArgument(isValidItemDescription(description), MESSAGE_CONSTRAINTS);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Returns true if a given string is a valid item description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public static boolean isValidItemDescription(String test) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return test.trim().length() \u003e 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                || (other instanceof ItemDescription // instanceof handles nulls"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 getDescription().equals(((ItemDescription) other).getDescription())); // state check"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return description.hashCode();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blimyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 56
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/item/Priority.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blimyj"
        },
        "content": "package seedu.address.commons.core.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blimyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Available priority levels for tasks and events."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blimyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blimyj"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    HIGH, MEDIUM, LOW;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blimyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 8
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/item/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blimyj"
        },
        "content": "package seedu.address.commons.core.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blimyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Represents an Item\u0027s Reminder in ELISA."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Guarantees: immutable;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blimyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blimyj"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final LocalDateTime dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Constructs a {@code Task}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param dateTime A valid LocalDateTime object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Reminder(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        requireNonNull(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Changes the dateTime that the reminder occurs. Removes the previous reminder so it does not occur."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param dateTime A LocalDateTime object which dictates the dateTime the reminder occurs."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @return A new Reminder with the new dateTime for the reminder."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Reminder changeDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        //When Reminder is implemented, the previous reminder notification should also be removed here"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new Reminder(dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        builder.append(\"Reminder DateTime: \")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getDateTime().toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (!(other instanceof Item)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        Reminder otherReminder \u003d (Reminder) other;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return otherReminder.getDateTime().equals(getDateTime());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    //Possibility of high number of hash collisions and as a result slower performance"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return Objects.hash(dateTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blimyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 70
    }
  },
  {
    "path": "src/main/java/seedu/address/commons/core/item/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blimyj"
        },
        "content": "package seedu.address.commons.core.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blimyj"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blimyj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Represents an Item\u0027s Task in ELISA."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Completion state of Event is false by default."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Priority of Event is medium by default."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blimyj"
        },
        "content": " * Guarantees: immutable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blimyj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blimyj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Priority priority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    private final Boolean complete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * Constructs a {@code Task}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param priority A Priority of the event. Defaults to Priority.MEDIUM if null."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     * @param complete Denotes whether the task has been completed or not. Defaults to false if null."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blimyj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Task(Priority priority, Boolean complete) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (priority !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.priority \u003d priority;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (complete !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.complete \u003d complete;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            this.complete \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return priority;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Boolean isComplete() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return complete;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Task markComplete() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new Task(getPriority(), true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public Task markIncomplete() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return new Task(getPriority(), false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        final StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        builder.append(\"Priority: \")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(getPriority().toString())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(\" Completed: \")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                .append(isComplete().toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    //Problematic as the details of the task might be the same while the Item/actual task being referred to is not the"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    //same due to description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        if (!(other instanceof Item)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blimyj"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        Task otherTask \u003d (Task) other;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return otherTask.getPriority().equals(getPriority())"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blimyj"
        },
        "content": "                \u0026\u0026 otherTask.isComplete().equals(isComplete());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    //hashCode is problematic as I believe that there are only 3*2 permutations of priority and Boolean"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    //Possibility of high number of hash collisions and as a result slower performance"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        return Objects.hash(priority, complete);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blimyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blimyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 87
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/LogicManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.GuiSettings;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.commons.core.LogsCenter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.exceptions.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.AddressBookParser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.ReadOnlyAddressBook;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.storage.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * The main LogicManager of the app."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager implements Logic {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Model model;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser addressBookParser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public LogicManager(Model model, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model \u003d model;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        addressBookParser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public CommandResult execute(String commandText) throws CommandException, ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blimyj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blimyj"
        },
        "content": "        //Logging"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        //Parse user input from String to a Command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Command command \u003d addressBookParser.parseCommand(commandText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        commandResult \u003d command.execute(model);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.saveAddressBook(model.getAddressBook());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return commandResult;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public ReadOnlyAddressBook getAddressBook() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBook();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public ObservableList\u003cPerson\u003e getFilteredPersonList() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getFilteredPersonList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getAddressBookFilePath() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getAddressBookFilePath();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public GuiSettings getGuiSettings() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return model.getGuiSettings();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setGuiSettings(GuiSettings guiSettings) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        model.setGuiSettings(guiSettings);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blimyj": 2,
      "mannggoo": 1,
      "-": 78
    }
  },
  {
    "path": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Used for initial separation of command word and args."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ParseException if the user input does not conform the expected format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String userInput) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return new AddCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return new EditCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return new DeleteCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FindCommandParser().parse(arguments);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 71,
      "Icesiolz": 1
    }
  },
  {
    "path": "src/main/java/seedu/address/model/ItemModel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import seedu.address.model.item.EventList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import seedu.address.model.item.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import seedu.address.model.item.ItemList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import seedu.address.model.item.ReminderList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import seedu.address.model.item.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Represents the model for ELISA"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class ItemModel {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private ItemList allItems;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private EventList eventList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private ReminderList reminderList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    // The list to be used for visualizing in the Ui"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private ItemList visualList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemModel() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.allItems \u003d new ItemList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.eventList \u003d new EventList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.reminderList \u003d new ReminderList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.visualList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Adds an item to the respective list. All items will be added to the central list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * It will also be added to the respective list depending on whether it is a task, event or a reminder."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param item the item to be added to the program"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public void add (Item item) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        allItems.add(item);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        if (item.isTask()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            taskList.add(item);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        if (item.isEvent()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            eventList.add(item);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        if (item.isReminder()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            reminderList.add(item);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Adds an item to a specific list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param item the item to be added to the list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param il the list the item is to be added to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public void add (Item item, ItemList il) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        il.add(item);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Remove an item from the current list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param index the item to be removed from the current list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return the item that was removed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Item remove(int index) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        Item item \u003d visualList.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        if (visualList instanceof TaskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            taskList.remove(item);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        } else if (visualList instanceof EventList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            eventList.remove(item);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        } else if (visualList instanceof ReminderList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            reminderList.remove(item);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            // never reached here as there are only three variants for the visualList"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return item;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Deletes an item from the program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param index the index of the item to be deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return the item that was deleted from the program"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Item delete(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        Item item \u003d visualList.remove(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        allItems.remove(item);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        taskList.remove(item);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        eventList.remove(item);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        reminderList.remove(item);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return item;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList getVisualList() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.visualList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Set the new item list to be the visualization list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param il the item list to be visualized"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public void setVisualList(ItemList il) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.visualList \u003d il;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 102
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/Event.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Stub class for the event class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class Event {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Creates an event from a JSON string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param json a JSON string representation of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a newly created event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws IOException throws an exception if the JSON string format is incorrect."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public static Event eventFromJson(String json) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ObjectMapper objectMapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        Event event \u003d objectMapper.readValue(json, Event.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Create a string representation of the event object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a string representation of the object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws JsonProcessingException throws an exception if the object cannot be expressed as a JSON string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String toJson() throws JsonProcessingException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ObjectMapper objectMapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return objectMapper.writeValueAsString(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/EventList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Object class to store all the items that are events within the program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class EventList extends ItemList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public EventList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Sorts the event list based on the date of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a sorted EventList of the current list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList sort() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        EventList el \u003d new EventList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        for (Item item: list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            el.add(item);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        el.list.sort((item1, item2) -\u003e item1.getEvent().getDate().compareTo(item2.getEvent().getDate()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return el;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Finds a substring within the description of an item."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param searchString a string to be search for within the description of an item"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a new EventList only containing the items that have the search string in their description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList find(String searchString) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        EventList el \u003d new EventList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return find(searchString, el);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * A stub class for the items."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private Optional\u003cTask\u003e task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private Optional\u003cEvent\u003e event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private Optional\u003cReminder\u003e reminder;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private TreeSet\u003cString\u003e tags;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Item (String description, Optional\u003cTask\u003e task, Optional\u003cEvent\u003e event, Optional\u003cReminder\u003e reminder) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this(description, task, event, reminder, new TreeSet\u003c\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Item (String description, Optional\u003cTask\u003e task, Optional\u003cEvent\u003e event, Optional\u003cReminder\u003e reminder,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "                 TreeSet\u003cString\u003e tag) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.reminder \u003d reminder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.tags \u003d tag;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public boolean isTask() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.task.isPresent();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public boolean isEvent() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.event.isPresent();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public boolean isReminder() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.reminder.isPresent();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return task.get();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Event getEvent() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return event.get();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Reminder getReminder() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return reminder.get();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public TreeSet\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Converts the item object to a JSON string. The JSON string is then stored within the saving."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a JSON string representation of the object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws JsonProcessingException throws any exception to be handled in the main program"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String toJson() throws JsonProcessingException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        String taskJson \u003d isTask() ? task.get().toJson() : \"null\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        String eventJson \u003d isEvent() ? event.get().toJson() : \"null\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        String reminderJson \u003d isReminder() ? reminder.get().toJson() : \"null\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        String result \u003d String.format(\"{\\\"description\\\": \\\"%s\\\", \\\"task\\\": \\\"%s\\\", \\\"event\\\": \\\"%s\\\", \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "                + \"\\\"reminder\\\": \\\"%s\\\"\", description, taskJson, eventJson, reminderJson);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sianghwee": 79
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/ItemList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * An object to hold items. Parent class for TaskList, EventList and ReminderList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class ItemList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    protected ArrayList\u003cItem\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Add an item into the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param item the item to be added into the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public void add(Item item) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        list.add(item);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Get the list of the item list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return an ArrayList of all the items in the ItemList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ArrayList\u003cItem\u003e getList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Removes an item from the list base on it\u0027s index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param index the integer value of the index of the item to be removed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return the item that is removed from this operation"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Item remove(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return list.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Removes an item from the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param item the item to be removed from the list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public void remove(Item item) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        list.remove(item);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Sorts the items in the list by their lexicographical order."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return the item list in the sorted order"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList sort() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ItemList il \u003d new ItemList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        for (Item item : list) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            il.add(item);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        il.list.sort((item1, item2) -\u003e item1.getDescription().compareTo(item2.getDescription()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return il;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Main method to find a search string."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param searchString the string to be searched for within the description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a new ItemList containing all the items that match the criteria."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList find(String searchString) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ItemList il \u003d new ItemList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return find(searchString, il);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Helper function to find an item based on their description."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param searchString the string to be search for within the description of an item"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param il the item list that will hold the items that contain the string within its description"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return the item list that was given with the found items added"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    protected ItemList find(String searchString, ItemList il) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        for (Item i : list) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            if (i.getDescription().toLowerCase().contains(searchString.toLowerCase())) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "                il.add(i);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return il;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 86
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Stub class for a Reminder object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Creates a Reminder from a JSON string."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param json a JSON string representation of the reminder"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a newly created reminder"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws IOException throws an exception if the JSON string format is incorrect."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public static Reminder reminderFromJson(String json) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ObjectMapper objectMapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        Reminder reminder \u003d objectMapper.readValue(json, Reminder.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return reminder;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Create a string representation of the Reminder object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a string representation of the object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws JsonProcessingException throws an exception if the object cannot be expressed as a JSON string"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String toJson() throws JsonProcessingException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ObjectMapper objectMapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return objectMapper.writeValueAsString(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 39
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/ReminderList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Object class to store all the items that are reminders within the program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class ReminderList extends ItemList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ReminderList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Sorts the Reminders by the date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a new ReminderList with the reminders within sorted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList sort() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ReminderList rl \u003d new ReminderList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        for (Item i : list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            rl.add(i);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        rl.list.sort((item1, item2) -\u003e item1.getReminder().getDate().compareTo(item2.getReminder().getDate()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return rl;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Finds a substring within the description of an item."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param searchString a string to be search for within the description of an item"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a new ReminderList only containing the items that have the search string in their description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList find(String searchString) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ReminderList rl \u003d new ReminderList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return super.find(searchString, rl);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 34
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.core.JsonProcessingException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Stub class for the task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Enum class that contains the priority of the tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    enum Priority implements Comparable\u003cPriority\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        HIGH, MEDIUM, LOW;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.priority;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Creates a Task from a JSON string."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param json a JSON string representation of the Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a newly created task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws IOException throws an exception if the JSON string format is incorrect."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public static Task taskFromJson(String json) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ObjectMapper objectMapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        Task task \u003d objectMapper.readValue(json, Task.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Create a string representation of the Task object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a string representation of the object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @throws JsonProcessingException throws an exception if the object cannot be expressed as a JSON string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public String toJson() throws JsonProcessingException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        ObjectMapper objectMapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return objectMapper.writeValueAsString(this);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 56
    }
  },
  {
    "path": "src/main/java/seedu/address/model/item/TaskList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "package seedu.address.model.item;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " * Object class to store all the items that are task within the program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sianghwee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "public class TaskList extends ItemList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Sort the items in the task list. The items are first sorted by whether they are"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * done or not and then by their priority."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return an ItemList of all the items sorted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList sort() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        for (Item item: list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            tl.add(item);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        tl.list.sort((item1, item2) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            Task task1 \u003d item1.getTask();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            Task task2 \u003d item2.getTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            if (task1.isDone() \u0026\u0026 !task2.isDone()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            } else if (!task1.isDone() \u0026\u0026 task2.isDone()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "                return task1.getPriority().compareTo(task2.getPriority());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return tl;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sianghwee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * Finds a substring within the description of an item."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @param searchString a string to be search for within the description of an item"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     * @return a new TaskList containing only the items that have the search string in their description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    public ItemList find(String searchString) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "        return find(searchString, tl);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sianghwee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sianghwee": 46
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.control.Tab?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.control.TabPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.layout.Pane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "\u003cfx:root onCloseRequest\u003d\"#handleExit\" title\u003d\"ELISA\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cicons\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "    \u003cImage url\u003d\"@/images/ElisaImage.PNG\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/icons\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cURL value\u003d\"@Extensions.css\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "      \u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"900.0\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "            \u003cVBox prefHeight\u003d\"600.0\" prefWidth\u003d\"300.0\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                  \u003cPane prefHeight\u003d\"110.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003c/padding\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003cchildren\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003cImageView fitHeight\u003d\"80.0\" fitWidth\u003d\"90.0\" layoutX\u003d\"12.0\" layoutY\u003d\"9.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cimage\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cImage url\u003d\"@../images/ElisaImageWithoutWords.png\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/image\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003cText fill\u003d\"#8de7fd\" layoutX\u003d\"80.0\" layoutY\u003d\"65.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Exceptionally Loud n\u0027 Intelligent\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cfont\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cFont name\u003d\"Titan One\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/font\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/Text\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003cText fill\u003d\"#10b3d7\" layoutX\u003d\"80.0\" layoutY\u003d\"45.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"ELISA\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cfont\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cFont name\u003d\"Titan One\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/Text\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003cText fill\u003d\"#8de7fd\" layoutX\u003d\"80.0\" layoutY\u003d\"80.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Student Assistant \"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cfont\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cFont name\u003d\"Titan One\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/font\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/Text\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003c/children\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                  \u003c/Pane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"440.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                  \u003cpadding\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/padding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                 \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"50.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "            \u003cVBox fx:id\u003d\"personList\" layoutX\u003d\"300.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cpadding\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/padding\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "               \u003cTabPane prefHeight\u003d\"576.0\" prefWidth\u003d\"578.0\" stylesheets\u003d\"@../images/tabpane.css\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                 \u003ctabs\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                   \u003cTab text\u003d\"(T)ask\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003ccontent\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                       \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"577.0\" prefWidth\u003d\"577.0\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cchildren\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefHeight\u003d\"550.0\" prefWidth\u003d\"578.0\" /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003c/children\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003c/content\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                   \u003c/Tab\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003cTab text\u003d\"(E)vent\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003ccontent\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"577.0\" prefWidth\u003d\"577.0\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cchildren\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                                 \u003cStackPane fx:id\u003d\"personListPanelPlaceholder2\" prefHeight\u003d\"550.0\" prefWidth\u003d\"578.0\" /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003c/children\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/content\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003c/Tab\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003cTab text\u003d\"(R)eminder\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003ccontent\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"577.0\" prefWidth\u003d\"577.0\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cchildren\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                                 \u003cStackPane fx:id\u003d\"personListPanelPlaceholder1\" prefHeight\u003d\"550.0\" prefWidth\u003d\"578.0\" /\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003c/children\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/content\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003c/Tab\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003cTab text\u003d\"(C)alendar\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003ccontent\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"577.0\" prefWidth\u003d\"577.0\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003cchildren\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                                 \u003cStackPane fx:id\u003d\"personListPanelPlaceholder21\" prefHeight\u003d\"550.0\" prefWidth\u003d\"578.0\" /\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                              \u003c/children\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                           \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                        \u003c/content\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                     \u003c/Tab\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "                 \u003c/tabs\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "               \u003c/TabPane\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "      \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "Icesiolz": 89
    }
  },
  {
    "path": "src/test/java/seedu/address/logic/parser/AddressBookParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package seedu.address.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.Assert.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.AddCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ClearCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.DeleteCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ExitCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.FindCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.commands.ListCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.logic.parser.exceptions.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.NameContainsKeywordsPredicate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.model.person.Person;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.EditPersonDescriptorBuilder;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonBuilder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import seedu.address.testutil.PersonUtil;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddressBookParserTest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private final AddressBookParser parser \u003d new AddressBookParser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_add() throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new AddCommand(person), command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_clear() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_delete() throws Exception {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_edit() throws Exception {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        Person person \u003d new PersonBuilder().build();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_exit() throws Exception {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_find() throws Exception {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        FindCommand command \u003d (FindCommand) parser.parseCommand("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_list() throws Exception {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unrecognisedInput_throwsParseException() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icesiolz"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_INVALID_COMMAND_FORMAT, ()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            -\u003e parser.parseCommand(\"\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public void parseCommand_unknownCommand_throwsParseException() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 93,
      "Icesiolz": 1
    }
  }
]
